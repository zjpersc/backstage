/*! For license information please see da5229c9.ff623076.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[484731],{603905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>f});var n=a(667294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(a),p=o,f=d["".concat(c,".").concat(p)]||d[p]||h[p]||r;return a?n.createElement(f,i(i({ref:t},u),{},{components:a})):n.createElement(f,i({ref:t},u))}));function f(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},410490:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>u});a(827378);var n=a(603905);function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},o.apply(this,arguments)}function r(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}const i={id:"threat-model",title:"Backstage Threat Model",description:"A document describing the threat model for Backstage."},s=void 0,c={unversionedId:"overview/threat-model",id:"overview/threat-model",title:"Backstage Threat Model",description:"A document describing the threat model for Backstage.",source:"@site/../docs/overview/threat-model.md",sourceDirName:"overview",slug:"/overview/threat-model",permalink:"/docs/overview/threat-model",draft:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/overview/threat-model.md",tags:[],version:"current",frontMatter:{id:"threat-model",title:"Backstage Threat Model",description:"A document describing the threat model for Backstage."},sidebar:"docs",previous:{title:"Release & Versioning Policy",permalink:"/docs/overview/versioning-policy"},next:{title:"Support and community",permalink:"/docs/overview/support"}},l={},u=[{value:"Trust Model",id:"trust-model",level:2},{value:"Integrator Responsibilities",id:"integrator-responsibilities",level:2},{value:"Common Backend Configuration",id:"common-backend-configuration",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Catalog",id:"catalog",level:2},{value:"Scaffolder",id:"scaffolder",level:2},{value:"TechDocs",id:"techdocs",level:2},{value:"Proxy",id:"proxy",level:2}],d={toc:u};function h(e){var{components:t}=e,a=r(e,["components"]);return(0,n.kt)("wrapper",o({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The threat model outlines key security considerations of Backstage for operators, developers and security researchers. This is a living document and will evolve and be expanded alongside the Backstage project as relevant."),(0,n.kt)("p",null,"See ",(0,n.kt)("a",o({parentName:"p"},{href:"https://github.com/backstage/backstage/security"}),"Security Policy and Advisories")," in the Backstage GitHub repository for details on reporting security vulnerabilities and advisories on fixed security flaws."),(0,n.kt)("h2",o({},{id:"trust-model"}),"Trust Model"),(0,n.kt)("p",null,"The Backstage trust model is divided into three groups with different trust levels."),(0,n.kt)("p",null,"An ",(0,n.kt)("strong",{parentName:"p"},"internal user")," is an authenticated user that generally belongs to the organization of a particular Backstage deployment. These users are trusted to the extent that they are not expected to compromise the availability of Backstage, but they are not trusted to not compromise data confidentiality or integrity."),(0,n.kt)("p",null,"An ",(0,n.kt)("strong",{parentName:"p"},"integrator")," is a user responsible for configuring and maintaining an instance of Backstage. Integrators are fully trusted, since they operate the system and database and therefore have root access to the host system. Additional measures can be taken by adopters of Backstage in order to restrict or observe the access of this group, but that falls outside of the current scope of Backstage."),(0,n.kt)("p",null,"Another group of de facto integrators is internal and external code contributors. When installing Backstage plugins you should vet them just like any other package from an external source. While it\u2019s possible to limit the impact of for example a supply chain attack by splitting the deployment into separate services with different plugins, the Backstage project itself does not aim to prevent these kinds of attacks or in any other way sandbox or limit the access of plugins."),(0,n.kt)("p",null,"An ",(0,n.kt)("strong",{parentName:"p"},"external user")," is a user that does not belong to the other two groups, for example a malicious actor outside of the organization. The security model of Backstage currently assumes that this group does not have any direct access to Backstage, and it is the responsibility of each adopter of Backstage to make sure this is the case."),(0,n.kt)("h2",o({},{id:"integrator-responsibilities"}),"Integrator Responsibilities"),(0,n.kt)("p",null,"As an integrator of Backstage you yourself are responsible for protecting your Backstage installation from external and unauthorized access. The sign-in system in Backstage does not exist to limit access, only to inform the system of the identity of the user. There are some plugins that have more fine-grained access control through the permissions system, but the primary purpose of that system is to restrict access to resources for internal users rather than Backstage as a whole. A common and recommended way to protect a Backstage deployment from unauthorized access is to deploy it behind an authenticating proxy such as AWS\u2019s ALB, GCP\u2019s IAP, or Cloudflare Access."),(0,n.kt)("p",null,"Other responsibilities include protecting the integrity of configuration files as it may otherwise be possible to introduce vulnerable configurations, as well as the confidentiality of configured secrets related to Backstage as these typically include authentication details to third party systems."),(0,n.kt)("p",null,"The integrator is ultimately responsible for auditing usage of internal and external plugins as these run on the host system and have access to configuration and secrets. When installing plugins from sources like NPM, you should vet these in the same way that you would vet any other package installed from that source."),(0,n.kt)("p",null,"The integrator is also responsible for maintaining the resolved NPM dependencies of their Backstage project. This involves ensuring that ",(0,n.kt)("inlineCode",{parentName:"p"},"yarn.lock")," receives updated versions of packages that have vulnerabilities, when those fixed versions are in range of what the Backstage packages request in their respective ",(0,n.kt)("inlineCode",{parentName:"p"},"package.json")," files. This is commonly done by employing automated tooling such as ",(0,n.kt)("a",o({parentName:"p"},{href:"https://dependabot.com/"}),"Dependabot"),", ",(0,n.kt)("a",o({parentName:"p"},{href:"https://snyk.io/"}),"Snyk"),", and/or ",(0,n.kt)("a",o({parentName:"p"},{href:"https://docs.renovatebot.com/"}),"Renovate")," on your own repository. When fixed versions exist that are ",(0,n.kt)("em",{parentName:"p"},"not")," in range of what Backstage packages request, or when larger operations such as switching out an entire dependency for another one is required, maintainers collaborate with contributors to try to address those dependency declarations in the main project as soon as possible."),(0,n.kt)("h2",o({},{id:"common-backend-configuration"}),"Common Backend Configuration"),(0,n.kt)("p",null,"There are many common facilities that are configured centrally and available to all Backstage backend plugins. For example there is a ",(0,n.kt)("inlineCode",{parentName:"p"},"DatabaseManager")," that provides access to a SQL database, ",(0,n.kt)("inlineCode",{parentName:"p"},"TaskScheduler")," for scheduling long-running tasks, ",(0,n.kt)("inlineCode",{parentName:"p"},"Logger")," as a general logging facility, and ",(0,n.kt)("inlineCode",{parentName:"p"},"UrlReader")," for reading content from external sources. These are all configured either directly in code, or within the ",(0,n.kt)("inlineCode",{parentName:"p"},"backend")," block of the static configuration. The appropriate care needs to be taken to ensure that any secrets remain confidential and no malicious configuration is injected."),(0,n.kt)("p",null,"In a typical Backstage setup, there is no boundary between plugins that run on the same host. Likewise, there is no boundary between plugins that share the same database access. Any plugin that is running on a host that has access to the logical database of any other plugin should be considered to have full access to that other plugin. For example, if you deploy the ",(0,n.kt)("inlineCode",{parentName:"p"},"auth")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"catalog")," plugins on separate hosts with separate configuration and credentials, the ",(0,n.kt)("inlineCode",{parentName:"p"},"catalog")," plugin is still considered to have full access to the ",(0,n.kt)("inlineCode",{parentName:"p"},"auth")," plugin if the ",(0,n.kt)("inlineCode",{parentName:"p"},"catalog")," plugin has access to the ",(0,n.kt)("inlineCode",{parentName:"p"},"auth")," plugin's logical database. The only way to create a boundary between the two plugins is to deploy them in such a way that they do not have access to each others\u2019 database. This applies to the database facility as well as any other shared resources, such as the cache."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"UrlReader")," facility is of particular interest for a secure Backstage configuration. In particular the ",(0,n.kt)("inlineCode",{parentName:"p"},"backend.reading.allow")," configuration lists the hosts that you trust the backend to be able to read content from on behalf of users. It is extremely important that this list does not, for example, allow access to instance metadata endpoints of cloud providers, or other endpoints that your Backstage instance may have access to which contain sensitive information. In general it is recommended to keep the list minimal and only allow reading from required endpoints. The same concerns apply to custom implementations of the ",(0,n.kt)("inlineCode",{parentName:"p"},"UrlReader")," interface, if you need to implement these through code."),(0,n.kt)("h2",o({},{id:"authentication"}),"Authentication"),(0,n.kt)("p",null,"Backstage provides authentication of users through the ",(0,n.kt)("inlineCode",{parentName:"p"},"auth")," plugin, which primarily acts as an authorization server for different OAuth 2.0 provider integrations. These integrations can both serve the purpose of signing users into Backstage, as well as providing delegated access to external resources, and are all subject to the common concerns of implementing secure OAuth 2.0 authorization servers. All auth provider integrations are disabled by default, and need to be enabled through configuration in order to be used. For each Backstage installation it is recommended to only enable the minimal set of providers that are in use by that instance."),(0,n.kt)("p",null,"It is not within scope of the ",(0,n.kt)("inlineCode",{parentName:"p"},"auth")," backend to protect against unauthorized access, that is something that needs to be handled at a deployment level. See the ",(0,n.kt)("a",o({parentName:"p"},{href:"#integrator-responsibilities"}),"Integrator Responsibilities")," section for more information."),(0,n.kt)("p",null,"In order to use an auth provider to sign in users into Backstage, it needs to be configured with an ",(0,n.kt)("a",o({parentName:"p"},{href:"https://backstage.io/docs/auth/identity-resolver"}),"Identity resolver"),", which is a custom callback implemented in code. The identity resolver is a sensitive part of configuring Backstage and it is important that it always resolves user identities correctly, based on information provided by the authentication provider. There are a number of built-in identity resolvers that can simplify configuration, and it is important that these all resolve users in a secure way, regardless of how they are used."),(0,n.kt)("p",null,"As part of signing in with an identity resolver, a Backstage Token is issued containing the resolved user identity. The tokens are asymmetrically signed JSON Web Tokens, with the public keys available to any service that wishes to verify a token. The signing keys are rotated continuously and are unique to each installation of Backstage, meaning that Backstage Tokens are not shared across installations. The token contains claims for the user identity and ownership information, which can be used to determine what Backstage resources are owned by that user or group. It is important that this token can not be forged outside of the ",(0,n.kt)("inlineCode",{parentName:"p"},"auth")," plugin, with the exception of other plugins deployed in the same backend service or sharing the same database. For a high-security deployment, the ",(0,n.kt)("inlineCode",{parentName:"p"},"auth")," backend should therefore be deployed in a separate service with its own database."),(0,n.kt)("p",null,"The token is used to prove the identity of the user within the Backstage system, and is used throughout Backstage plugins to control access. It is important that the ownership resolution logic is consistent across the entire Backstage ecosystem, with no possibility of misinterpreting the ownership information."),(0,n.kt)("p",null,"For cross backend communication the Backstage Token is typically forwarded or in strict backend to backend communication without a user party the backend itself issues a service token based on a pre-shared secret which is then validated on the receiving end. There are no unique service identities tied to these tokens at this point, meaning the tokens can be used across all services in a Backstage installation, this is something that we aim to improve in the future."),(0,n.kt)("p",null,"Backstage also supports authentication through a proxy where the user identity is read from the incoming request from the proxy, which has been decorated by an authenticating reverse proxy such as ",(0,n.kt)("a",o({parentName:"p"},{href:"https://aws.amazon.com/elasticloadbalancing/application-load-balancer/"}),"AWS ALB"),". The following proxy auth providers verify the signature of incoming requests, and are therefore safe to deploy with direct access by users: ",(0,n.kt)("inlineCode",{parentName:"p"},"awsAlb"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"cfAccess"),", and ",(0,n.kt)("inlineCode",{parentName:"p"},"gcpIap"),". Providers like ",(0,n.kt)("inlineCode",{parentName:"p"},"oauth2Proxy")," does not verify the incoming request and can therefore be spoofed by a malicious internal user to supply the ",(0,n.kt)("inlineCode",{parentName:"p"},"auth")," backend with forged identity information. It\u2019s therefore highly recommended to restrict access to the ",(0,n.kt)("inlineCode",{parentName:"p"},"oauth2Proxy")," endpoints, or use a different provider."),(0,n.kt)("h2",o({},{id:"catalog"}),"Catalog"),(0,n.kt)("p",null,"Integrators should configure ",(0,n.kt)("a",o({parentName:"p"},{href:"https://backstage.io/docs/features/software-catalog/configuration#catalog-rules"}),"catalog rules")," to limit the allowed entity kinds that users can define. In general it is best to restrict definition of User, Group, and Template entities so that internal users cannot register additional ones. Template entities define actions that are executed on the backend hosts, and while the goal is for these actions to be secure regardless of input, it is still a more sensitive context and it is recommended that you protect it with additional checks. It is very important to not allow registration of User and Group entities if you ingest and rely on these as organizational data in your catalog. Doing so could otherwise open up for the ability to impersonate users and confuse group membership information. You should always ingest organizational data using a statically configured catalog location or an entity provider reading from a trusted source. The entities emitted directly by an entity provider are always trusted and rules are not applied to them, but any entities produced further down the chain are still subject to the rules."),(0,n.kt)("p",null,"The Catalog does not aim to protect against resource exhaustion attacks in its default setup. If you need to prevent your internal users from being able to register large amounts of entities, then it is recommended to disable entity registration and use a different approach for discovering entities. One way to mitigate any resource exhaustion attacks is to only allow the catalog to read from trusted SCM sources that have an audit trail. Catalog currently lacks limits for entity hierarchy depth and entity size, which we hope to address in the future."),(0,n.kt)("p",null,"By default all internal users are allowed to create and delete entities. If this does not fit your organization's needs it is recommended to enable and configure the ",(0,n.kt)("a",o({parentName:"p"},{href:"https://backstage.io/docs/permissions/overview"}),"permission")," system to restrict these operations."),(0,n.kt)("h2",o({},{id:"scaffolder"}),"Scaffolder"),(0,n.kt)("p",null,"By default, Scaffolding jobs execute directly on the host machine, including any actions defined in the template. Because the Scaffolder templates are considered a more sensitive area it is recommended to control access to create and update templates to trusted parties. Template execution is intended to be secure regardless of input, but we still recommend this additional layer of protection. The string templating is executed in a ",(0,n.kt)("a",o({parentName:"p"},{href:"https://github.com/patriksimek/vm2"}),"node VM sandbox")," to mitigate the possibility of remote code execution attacks."),(0,n.kt)("p",null,"The Scaffolder often has elevated permissions to for example create repositories in a Github organization. The integrator should therefore be cautious of Scaffolder Templates that for example delete or update existing resources as the user input is typically user defined and can therefore delete or modify resources maliciously or by mistake."),(0,n.kt)("p",null,"One strategy that allows you to reduce the access that the Scaffolder service has is to rely on user credentials when executing actions. For example, a GitHub App integration could be configured with read-only permissions, with a separate user OAuth token used to create repositories. This requires that your users have access to create repositories in the first place."),(0,n.kt)("p",null,"The integrator should audit installed scaffolding actions just like any other plugin package. It is also important to verify that installed actions fall in line with your own security requirements, as some actions might be intended for more relaxed environments."),(0,n.kt)("p",null,"By default all internal users are allowed to execute templates in the scaffolder. If this does not fit your organization's needs it is recommended to enable and configure the ",(0,n.kt)("a",o({parentName:"p"},{href:"https://backstage.io/docs/permissions/overview"}),"permission")," system to restrict these operations."),(0,n.kt)("h2",o({},{id:"techdocs"}),"TechDocs"),(0,n.kt)("p",null,"TechDocs' backend can be broadly configured in two ways. The default is when ",(0,n.kt)("inlineCode",{parentName:"p"},"techdocs.builder")," is set to ",(0,n.kt)("inlineCode",{parentName:"p"},"local"),", in which documentation is generated on-demand and stored locally by the TechDocs backend. When ",(0,n.kt)("inlineCode",{parentName:"p"},"techdocs.builder")," is set to ",(0,n.kt)("inlineCode",{parentName:"p"},"external")," instead, documentation is assumed to be generated by an external process (e.g. in a CI/CD pipeline), and merely read from a configured external storage provider."),(0,n.kt)("p",null,"When documentation is generated locally, integrators are responsible for ensuring secure configuration of file system permissions in the location where generated assets are stored. When documentation is generated externally, integrators are responsible for access control and permissioning between the external process that generates the documentation, the storage provider where documentation assets are published, and the TechDocs backend."),(0,n.kt)("p",null,"Regardless of backend configuration, the TechDocs frontend does not trust the generated HTML of any documentation sites and therefore applies a strict sanitization process before rendering out any content to users."),(0,n.kt)("p",null,"By default, all TechDocs documentation is visible to all Backstage users. Access can be restricted to TechDocs sites by configuring view permissions for the Catalog."),(0,n.kt)("h2",o({},{id:"proxy"}),"Proxy"),(0,n.kt)("p",null,"The proxy backend acts as a utility for frontend plugins to access remote services that may not be set up to receive traffic directly from the Backstage frontend. Typical reasons for this would be that the upstream service does not provide the appropriate CORS headers or does not serve its content over HTTPS."),(0,n.kt)("p",null,"The proxy entries are configured through static configuration. Each entry has a mount path and an upstream target, and also supports other options such as limiting the allowed methods, or injecting additional headers. It is recommended to avoid injecting authentication headers for upstream services, as this is a risky way to decorate requests with credentials. Anyone with access to your Backstage deployment will be able to make requests to the upstream service using the injected credentials. It is recommended that you instead create a backend plugin that forwards individual requests to the upstream service in a secure way. In case you do end up injecting credentials into upstream requests, be sure that you are not exposing any sensitive information or actions. You should also restrict the access as much as possible, for example using the ",(0,n.kt)("inlineCode",{parentName:"p"},"allowedMethods")," option to limit the methods that can be used, and using tokens with the minimum required authorization scope."))}h.isMDXComponent=!0},862525:e=>{var t=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},a=0;a<10;a++)t["_"+String.fromCharCode(a)]=a;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(o){return!1}}()?Object.assign:function(e,r){for(var i,s,c=o(e),l=1;l<arguments.length;l++){for(var u in i=Object(arguments[l]))a.call(i,u)&&(c[u]=i[u]);if(t){s=t(i);for(var d=0;d<s.length;d++)n.call(i,s[d])&&(c[s[d]]=i[s[d]])}}return c}},541535:(e,t,a)=>{var n=a(862525),o=60103,r=60106;var i=60109,s=60110,c=60112;var l=60115,u=60116;if("function"==typeof Symbol&&Symbol.for){var d=Symbol.for;o=d("react.element"),r=d("react.portal"),d("react.fragment"),d("react.strict_mode"),d("react.profiler"),i=d("react.provider"),s=d("react.context"),c=d("react.forward_ref"),d("react.suspense"),l=d("react.memo"),u=d("react.lazy")}var h="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,a=1;a<arguments.length;a++)t+="&args[]="+encodeURIComponent(arguments[a]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function g(e,t,a){this.props=e,this.context=t,this.refs=m,this.updater=a||f}function y(){}function k(e,t,a){this.props=e,this.context=t,this.refs=m,this.updater=a||f}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=g.prototype;var b=k.prototype=new y;b.constructor=k,n(b,g.prototype),b.isPureReactComponent=!0;var v={current:null},w=Object.prototype.hasOwnProperty,x={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,a){var n,r={},i=null,s=null;if(null!=t)for(n in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(i=""+t.key),t)w.call(t,n)&&!x.hasOwnProperty(n)&&(r[n]=t[n]);var c=arguments.length-2;if(1===c)r.children=a;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];r.children=l}if(e&&e.defaultProps)for(n in c=e.defaultProps)void 0===r[n]&&(r[n]=c[n]);return{$$typeof:o,type:e,key:i,ref:s,props:r,_owner:v.current}}function O(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var j=/\/+/g;function B(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,a,n,i){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var c=!1;if(null===e)c=!0;else switch(s){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case o:case r:c=!0}}if(c)return i=i(c=e),e=""===n?"."+B(c,0):n,Array.isArray(i)?(a="",null!=e&&(a=e.replace(j,"$&/")+"/"),C(i,t,a,"",(function(e){return e}))):null!=i&&(O(i)&&(i=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||c&&c.key===i.key?"":(""+i.key).replace(j,"$&/")+"/")+e)),t.push(i)),1;if(c=0,n=""===n?".":n+":",Array.isArray(e))for(var l=0;l<e.length;l++){var u=n+B(s=e[l],l);c+=C(s,t,a,u,i)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=h&&e[h]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),l=0;!(s=e.next()).done;)c+=C(s=s.value,t,a,u=n+B(s,l++),i);else if("object"===s)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return c}function N(e,t,a){if(null==e)return e;var n=[],o=0;return C(e,n,"","",(function(e){return t.call(a,e,o++)})),n}function S(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var P={current:null};function A(){var e=P.current;if(null===e)throw Error(p(321));return e}},827378:(e,t,a)=>{a(541535)}}]);