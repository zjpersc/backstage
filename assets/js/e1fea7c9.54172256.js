/*! For license information please see e1fea7c9.54172256.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[957730],{603905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(667294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,y=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(y,o(o({ref:t},c),{},{components:n})):a.createElement(y,o({ref:t},c))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},646001:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});n(827378);var a=n(603905);function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},i.apply(this,arguments)}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const o={id:"analytics",title:"Plugin Analytics",description:"Measuring usage of your Backstage instance."},l=void 0,s={unversionedId:"plugins/analytics",id:"plugins/analytics",title:"Plugin Analytics",description:"Measuring usage of your Backstage instance.",source:"@site/../docs/plugins/analytics.md",sourceDirName:"plugins",slug:"/plugins/analytics",permalink:"/docs/plugins/analytics",draft:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/plugins/analytics.md",tags:[],version:"current",frontMatter:{id:"analytics",title:"Plugin Analytics",description:"Measuring usage of your Backstage instance."},sidebar:"docs",previous:{title:"Customization (Experimental)",permalink:"/docs/plugins/customization"},next:{title:"Feature Flags",permalink:"/docs/plugins/feature-flags"}},p={},c=[{value:"Concepts",id:"concepts",level:2},{value:"Supported Analytics Tools",id:"supported-analytics-tools",level:2},{value:"Key Events",id:"key-events",level:2},{value:"Writing Integrations",id:"writing-integrations",level:2},{value:"Handling User Identity",id:"handling-user-identity",level:3},{value:"Capturing Events",id:"capturing-events",level:2},{value:"Providing Extra Attributes",id:"providing-extra-attributes",level:3},{value:"Providing Context for Events",id:"providing-context-for-events",level:3},{value:"Event Naming Considerations",id:"event-naming-considerations",level:3},{value:"Unit Testing Event Capture",id:"unit-testing-event-capture",level:3}],u={toc:c};function d(e){var{components:t}=e,n=r(e,["components"]);return(0,a.kt)("wrapper",i({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Setting up, maintaining, and iterating on an instance of Backstage can be a\nlarge investment. To help measure return on this investment, Backstage comes\nwith an event-based Analytics API that grants app integrators the flexibility to\ncollect and analyze Backstage usage in the analytics tool of their choice, while\nproviding plugin developers a standard interface for instrumenting key user\ninteractions."),(0,a.kt)("h2",i({},{id:"concepts"}),"Concepts"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Events")," consist of, at a minimum, an ",(0,a.kt)("inlineCode",{parentName:"li"},"action")," (like ",(0,a.kt)("inlineCode",{parentName:"li"},"click"),") and a\n",(0,a.kt)("inlineCode",{parentName:"li"},"subject")," (like ",(0,a.kt)("inlineCode",{parentName:"li"},"thing that was clicked on"),")."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Attributes")," represent additional dimensional data (in the form of key/value\npairs) that may be provided on an event-by-event basis. To continue the above\nexample, the URL a user clicked to might look like ",(0,a.kt)("inlineCode",{parentName:"li"},'{ "to": "/a/page" }'),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Context")," represents the broader context in which an event took place. By\ndefault, information like ",(0,a.kt)("inlineCode",{parentName:"li"},"pluginId"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"extension"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"routeRef")," are\nprovided.")),(0,a.kt)("p",null,'This composition of events aims to allow analysis at different levels of detail,\nenabling very granular questions (like "what is the most clicked on thing on a\nparticular route") as well as very high-level questions (like "what is the most\nused plugin in my Backstage instance") to be answered.'),(0,a.kt)("h2",i({},{id:"supported-analytics-tools"}),"Supported Analytics Tools"),(0,a.kt)("p",null,"While all that's needed to consume and forward these events to an analytics tool\nis a concrete implementation of ",(0,a.kt)("a",i({parentName:"p"},{href:"https://backstage.io/docs/reference/core-plugin-api.analyticsapi"}),"AnalyticsApi"),", common\nintegrations are packaged and provided as plugins. Find your analytics tool of\nchoice below."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",i({parentName:"tr"},{align:null}),"Analytics Tool"),(0,a.kt)("th",i({parentName:"tr"},{align:null}),"Support Status"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:null}),(0,a.kt)("a",i({parentName:"td"},{href:"https://github.com/backstage/backstage/blob/master/plugins/analytics-module-ga/README.md"}),"Google Analytics")),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"Yes \u2705")))),(0,a.kt)("p",null,"To suggest an integration, please ",(0,a.kt)("a",i({parentName:"p"},{href:"https://github.com/backstage/backstage/issues/new?assignees=&labels=plugin&template=plugin_template.md&title=%5BAnalytics+Module%5D+THE+ANALYTICS+TOOL+TO+INTEGRATE"}),"open an issue")," for the analytics\ntool your organization uses. Or jump to ",(0,a.kt)("a",i({parentName:"p"},{href:"#writing-integrations"}),"Writing Integrations")," to\nlearn how to contribute the integration yourself!"),(0,a.kt)("h2",i({},{id:"key-events"}),"Key Events"),(0,a.kt)("p",null,"The following table summarizes events that, depending on the plugins you have\ninstalled, may be captured."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",i({parentName:"tr"},{align:null}),"Action"),(0,a.kt)("th",i({parentName:"tr"},{align:null}),"Subject"),(0,a.kt)("th",i({parentName:"tr"},{align:null}),"Other Notes"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"navigate")),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"The URL of the page that was navigated to"),(0,a.kt)("td",i({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"click")),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"The text of the link that was clicked on"),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"The ",(0,a.kt)("inlineCode",{parentName:"td"},"to")," attribute represents the URL clicked to")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"create")),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"The ",(0,a.kt)("inlineCode",{parentName:"td"},"name")," of the software being created; if no ",(0,a.kt)("inlineCode",{parentName:"td"},"name")," property is requested by the given Software Template, then the string ",(0,a.kt)("inlineCode",{parentName:"td"},"new {templateName}")," is used instead."),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"The context holds an ",(0,a.kt)("inlineCode",{parentName:"td"},"entityRef"),", set to the template's ref (e.g. ",(0,a.kt)("inlineCode",{parentName:"td"},"template:default/template-name"),")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"search")),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"The search term entered in any search bar component"),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"- The context holds ",(0,a.kt)("inlineCode",{parentName:"td"},"searchTypes"),", representing ",(0,a.kt)("inlineCode",{parentName:"td"},"types")," constraining the search. The ",(0,a.kt)("inlineCode",{parentName:"td"},"value")," represents the total number of search results for the query. This may not be visible if the permission framework is being used.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",i({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"discover")),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"The title of the search result that was clicked on"),(0,a.kt)("td",i({parentName:"tr"},{align:null}),"The ",(0,a.kt)("inlineCode",{parentName:"td"},"value")," is the result rank. A ",(0,a.kt)("inlineCode",{parentName:"td"},"to")," attribute is also provided")))),(0,a.kt)("p",null,"If there is an event you'd like to see captured, please ","[open an\nissue][add-event]"," describing the event you want to see and the questions it\nwould help you answer. Or jump to ",(0,a.kt)("a",i({parentName:"p"},{href:"#capturing-events"}),"Capturing Events")," to learn how\nto contribute the instrumentation yourself!"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"OSS plugin maintainers: feel free to document your events in the table above.")),(0,a.kt)("p",null,"[add-event]",":\n",(0,a.kt)("a",i({parentName:"p"},{href:"https://github.com/backstage/backstage/issues/new?assignees=&labels=enhancement&template=feature_template.md&title=%5BAnalytics%20Event%5D:%20THE+EVENT+TO+CAPTURE"}),"https://github.com/backstage/backstage/issues/new?assignees=&labels=enhancement&template=feature_template.md&title=[Analytics%20Event]:%20THE+EVENT+TO+CAPTURE")),(0,a.kt)("h2",i({},{id:"writing-integrations"}),"Writing Integrations"),(0,a.kt)("p",null,"Analytics event forwarding is implemented as a Backstage utility API. Just as\nyou might provide a custom API implementation for errors or SCM Authentication,\nyou can provide one for analytics."),(0,a.kt)("p",null,"The provided API need only provide a single method ",(0,a.kt)("inlineCode",{parentName:"p"},"captureEvent"),", which takes\nan ",(0,a.kt)("inlineCode",{parentName:"p"},"AnalyticsEvent")," object."),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-ts"}),"import {\n  analyticsApiRef,\n  AnalyticsEvent,\n  AnyApiFactory,\n  createApiFactory,\n} from '@backstage/core-plugin-api';\n\nexport const apis: AnyApiFactory[] = [\n  createApiFactory(analyticsApiRef, {\n    captureEvent: (event: AnalyticsEvent) => {\n      window._AcmeAnalyticsQ.push(event);\n    },\n  }),\n];\n")),(0,a.kt)("p",null,"In reality, you would likely want to encapsulate instantiation logic and pull\nsome details from configuration. A more complete example might look like:"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-ts"}),"import {\n  AnalyticsApi,\n  analyticsApiRef,\n  AnalyticsEvent,\n  AnyApiFactory,\n  configApiRef,\n  createApiFactory,\n} from '@backstage/core-plugin-api';\nimport { AcmeAnalytics } from 'acme-analytics';\n\nclass AcmeAnalytics implements AnalyticsApi {\n  private constructor(accountId: number) {\n    AcmeAnalytics.init(accountId);\n  }\n\n  static fromConfig(config) {\n    const accountId = config.getString('app.analytics.acme.id');\n    return new AcmeAnalytics(accountId);\n  }\n\n  captureEvent(event: AnalyticsEvent) {\n    const { action, ...rest } = event;\n    AcmeAnalytics.send(action, rest);\n  }\n}\n\nexport const apis: AnyApiFactory[] = [\n  createApiFactory({\n    api: analyticsApiRef,\n    deps: { configApi: configApiRef },\n    factory: ({ configApi }) => AcmeAnalytics.fromConfig(configApi),\n  }),\n];\n")),(0,a.kt)("p",null,"If you are integrating with an analytics service (as opposed to an internal\ntool), consider contributing your API implementation as a plugin!"),(0,a.kt)("p",null,"By convention, such packages should be named\n",(0,a.kt)("inlineCode",{parentName:"p"},"@backstage/analytics-module-[name]"),", and any configuration should be keyed\nunder ",(0,a.kt)("inlineCode",{parentName:"p"},"app.analytics.[name]"),"."),(0,a.kt)("h3",i({},{id:"handling-user-identity"}),"Handling User Identity"),(0,a.kt)("p",null,"If the analytics platform you are integrating with has a first-class concept of\nuser identity, you can (optionally) choose to support this by the following this\nconvention:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Allow your implementation to be instantiated with the ",(0,a.kt)("inlineCode",{parentName:"li"},"identityApi")," as one of\nits options in a ",(0,a.kt)("inlineCode",{parentName:"li"},"fromConfig")," static method."),(0,a.kt)("li",{parentName:"ul"},"Use the ",(0,a.kt)("inlineCode",{parentName:"li"},"userEntityRef")," resolved by ",(0,a.kt)("inlineCode",{parentName:"li"},"identityApi"),"'s ",(0,a.kt)("inlineCode",{parentName:"li"},"getBackstageIdentity()"),"\nmethod as the basis for the user ID you send to your analytics platform.")),(0,a.kt)("p",null,"For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-typescript"}),"import {\n  AnalyticsApi,\n  analyticsApiRef,\n  AnyApiFactory,\n  configApiRef,\n  createApiFactory,\n  identityApiRef,\n  IdentityApi,\n} from '@backstage/core-plugin-api';\n\n// Implementation that optionally initializes with a userId.\nclass AcmeAnalytics implements AnalyticsApi {\n  private constructor(accountId: number, identityApi?: IdentityApi) {\n    if (identityApi) {\n      identityApi.getBackstageIdentity().then(identity => {\n        AcmeAnalytics.init(accountId, {\n          userId: identity.userEntityRef,\n        });\n      });\n    } else {\n      AcmeAnalytics.init(accountId);\n    }\n  }\n\n  static fromConfig(config, options) {\n    const accountId = config.getString('app.analytics.acme.id');\n    return new AcmeAnalytics(accountId, options.identityApi);\n  }\n}\n\n// Your implementation should be instantiated like this:\nexport const apis: AnyApiFactory[] = [\n  createApiFactory({\n    api: analyticsApiRef,\n    deps: { configApi: configApiRef, identityApi: identityApiRef },\n    factory: ({ configApi, identityApi }) =>\n      AcmeAnalytics.fromConfig(configApi, {\n        identityApi,\n      }),\n  }),\n];\n")),(0,a.kt)("h2",i({},{id:"capturing-events"}),"Capturing Events"),(0,a.kt)("p",null,"To instrument an event in a component, start by retrieving an analytics tracker\nusing the ",(0,a.kt)("inlineCode",{parentName:"p"},"useAnalytics()")," hook provided by ",(0,a.kt)("inlineCode",{parentName:"p"},"@backstage/core-plugin-api"),". The\ntracker includes a ",(0,a.kt)("inlineCode",{parentName:"p"},"captureEvent")," method which takes an ",(0,a.kt)("inlineCode",{parentName:"p"},"action")," and a ",(0,a.kt)("inlineCode",{parentName:"p"},"subject"),"\nas arguments."),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-ts"}),"import { useAnalytics } from '@backstage/core-plugin-api';\n\nconst analytics = useAnalytics();\nanalytics.captureEvent('deploy', serviceName);\n")),(0,a.kt)("h3",i({},{id:"providing-extra-attributes"}),"Providing Extra Attributes"),(0,a.kt)("p",null,"Additional dimensional ",(0,a.kt)("inlineCode",{parentName:"p"},"attributes")," as well as a numeric ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," can be provided\non a third ",(0,a.kt)("inlineCode",{parentName:"p"},"options")," argument if/when relevant for the event:"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-ts"}),"analytics.captureEvent('merge', pullRequestName, {\n  value: pullRequestAgeInMinutes,\n  attributes: {\n    org,\n    repo,\n  },\n});\n")),(0,a.kt)("p",null,"In the above example, an event resembling the following object would be\ncaptured:"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-json"}),'{\n  "action": "merge",\n  "subject": "Name of Pull Request",\n  "value": 60,\n  "attributes": {\n    "org": "some-org",\n    "repo": "some-repo"\n  }\n}\n')),(0,a.kt)("h3",i({},{id:"providing-context-for-events"}),"Providing Context for Events"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"attributes")," option is good for capturing details available to you within\nthe component that you're instrumenting. For capturing metadata only available\nfurther up the react tree, or to help app integrators aggregate distinct events\nby some common value, use an ",(0,a.kt)("inlineCode",{parentName:"p"},"<AnalyticsContext>"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-tsx"}),"import { AnalyticsContext, useAnalytics } from '@backstage/core-plugin-api';\n\nconst MyComponent = ({ value }) => {\n  const analytics = useAnalytics();\n  const handleClick = () => analytics.captureEvent('check', value);\n  return <SomeThing value={value} onClick={handleClick} />;\n};\n\nconst MyWrapper = () => {\n  return (\n    <AnalyticsContext attributes={{ segment: 'xyz' }}>\n      <MyComponent value={'Some Value'} />\n    </AnalyticsContext>\n  );\n};\n")),(0,a.kt)("p",null,"In the above example, clicking on ",(0,a.kt)("inlineCode",{parentName:"p"},"<SomeThing />")," would result in an analytics\nevent resembling:"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-json"}),'{\n  "action": "check",\n  "subject": "Some Value",\n  "context": {\n    "segment": "xyz"\n  }\n}\n')),(0,a.kt)("p",null,"Note that, for brevity in the example above, the context keys provided by\nBackstage core (",(0,a.kt)("inlineCode",{parentName:"p"},"pluginId"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"extension"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"routeRef"),") have been omitted. In\nreality, those details would be included alongside any additional context\nprovided by you."),(0,a.kt)("p",null,"Analytics contexts can be nested; their values are merged down the react tree,\nallowing keys to be overwritten."),(0,a.kt)("h3",i({},{id:"event-naming-considerations"}),"Event Naming Considerations"),(0,a.kt)("p",null,"An event is split into its constituent parts to enable analysis at various\nlevels of granularity. In order to maintain this flexibility at analysis-time,\nit's important to keep each of these levels of detail disaggregated."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Avoid providing an overly specific ",(0,a.kt)("inlineCode",{parentName:"p"},"action"),". For example, instead of\n",(0,a.kt)("inlineCode",{parentName:"p"},"filterEntityTable"),", consider just using ",(0,a.kt)("inlineCode",{parentName:"p"},"filter")," as the action, and allowing\n",(0,a.kt)("inlineCode",{parentName:"p"},"EntityTable")," to be specified as part of the event's ",(0,a.kt)("inlineCode",{parentName:"p"},"context")," (most likely\nautomatically as part of the ",(0,a.kt)("inlineCode",{parentName:"p"},"extension")," in which the ",(0,a.kt)("inlineCode",{parentName:"p"},"filter")," event was\ncaptured).")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"On the flip side, when adding ",(0,a.kt)("inlineCode",{parentName:"p"},"attributes")," to or ",(0,a.kt)("inlineCode",{parentName:"p"},"context")," around an event,\nlook at existing events and see if the data you are capturing matches the\nintention, type, or even the content of ",(0,a.kt)("em",{parentName:"p"},"their")," ",(0,a.kt)("inlineCode",{parentName:"p"},"attributes")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"context"),".\nFor instance, it's common for events that involve the Catalog to include an\n",(0,a.kt)("inlineCode",{parentName:"p"},"entityRef")," contextual key. Using the same keys and values in your event will\nensure that events instrumented across plugins can easily be aggregated."))),(0,a.kt)("h3",i({},{id:"unit-testing-event-capture"}),"Unit Testing Event Capture"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@backstage/test-utils")," package includes a ",(0,a.kt)("inlineCode",{parentName:"p"},"MockAnalyticsApi")," implementation\nthat you can use in your unit tests to spy on and make assertions about any\nanalytics events captured."),(0,a.kt)("p",null,"Use it like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",i({parentName:"pre"},{className:"language-tsx"}),"import { render, fireEvent, waitFor } from '@testing-library/react';\nimport { analyticsApiRef } from '@backstage/core-plugin-api';\nimport {\n  MockAnalyticsApi,\n  TestApiProvider,\n  wrapInTestApp,\n} from '@backstage/test-utils';\n\ndescribe('SomeComponent', () => {\n  it('should capture event on click', () => {\n    // Use the Mock Analytics API to spy on event captures.\n    const apiSpy = new MockAnalyticsApi();\n\n    // Render the component being tested\n    const { getByText } = render(\n      wrapInTestApp(\n        <TestApiProvider apis={[[analyticsApiRef, apiSpy]]}>\n          <SomeComponentUnderTest />\n        </TestApiProvider>,\n      ),\n    );\n\n    // Fire the event that triggers event capture.\n    fireEvent.click(getByText('some component text'));\n\n    // Assert that the event was captured with the expected data.\n    await waitFor(() => {\n      expect(apiSpy.getEvents()[0]).toMatchObject({\n        action: 'expected action',\n        subject: 'expected subject',\n        attributes: {\n          foo: 'bar',\n        },\n      });\n    });\n  });\n});\n")))}d.isMDXComponent=!0},862525:e=>{var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(e){a[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(i){return!1}}()?Object.assign:function(e,r){for(var o,l,s=i(e),p=1;p<arguments.length;p++){for(var c in o=Object(arguments[p]))n.call(o,c)&&(s[c]=o[c]);if(t){l=t(o);for(var u=0;u<l.length;u++)a.call(o,l[u])&&(s[l[u]]=o[l[u]])}}return s}},541535:(e,t,n)=>{var a=n(862525),i=60103,r=60106;var o=60109,l=60110,s=60112;var p=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var u=Symbol.for;i=u("react.element"),r=u("react.portal"),u("react.fragment"),u("react.strict_mode"),u("react.profiler"),o=u("react.provider"),l=u("react.context"),s=u("react.forward_ref"),u("react.suspense"),p=u("react.memo"),c=u("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function m(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function f(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||y}function k(){}function h(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||y}f.prototype.isReactComponent={},f.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(m(85));this.updater.enqueueSetState(this,e,t,"setState")},f.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=f.prototype;var v=h.prototype=new k;v.constructor=h,a(v,f.prototype),v.isPureReactComponent=!0;var b={current:null},A=Object.prototype.hasOwnProperty,N={key:!0,ref:!0,__self:!0,__source:!0};function w(e,t,n){var a,r={},o=null,l=null;if(null!=t)for(a in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(o=""+t.key),t)A.call(t,a)&&!N.hasOwnProperty(a)&&(r[a]=t[a]);var s=arguments.length-2;if(1===s)r.children=n;else if(1<s){for(var p=Array(s),c=0;c<s;c++)p[c]=arguments[c+2];r.children=p}if(e&&e.defaultProps)for(a in s=e.defaultProps)void 0===r[a]&&(r[a]=s[a]);return{$$typeof:i,type:e,key:o,ref:l,props:r,_owner:b.current}}function C(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var x=/\/+/g;function O(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function j(e,t,n,a,o){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var s=!1;if(null===e)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case i:case r:s=!0}}if(s)return o=o(s=e),e=""===a?"."+O(s,0):a,Array.isArray(o)?(n="",null!=e&&(n=e.replace(x,"$&/")+"/"),j(o,t,n,"",(function(e){return e}))):null!=o&&(C(o)&&(o=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,n+(!o.key||s&&s.key===o.key?"":(""+o.key).replace(x,"$&/")+"/")+e)),t.push(o)),1;if(s=0,a=""===a?".":a+":",Array.isArray(e))for(var p=0;p<e.length;p++){var c=a+O(l=e[p],p);s+=j(l,t,n,c,o)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),p=0;!(l=e.next()).done;)s+=j(l=l.value,t,n,c=a+O(l,p++),o);else if("object"===l)throw t=""+e,Error(m(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return s}function E(e,t,n){if(null==e)return e;var a=[],i=0;return j(e,a,"","",(function(e){return t.call(n,e,i++)})),a}function T(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var I={current:null};function P(){var e=I.current;if(null===e)throw Error(m(321));return e}},827378:(e,t,n)=>{n(541535)}}]);