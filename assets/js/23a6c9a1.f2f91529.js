/*! For license information please see 23a6c9a1.f2f91529.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[305032],{603905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),g=o,m=u["".concat(c,".").concat(g)]||u[g]||d[g]||i;return n?a.createElement(m,r(r({ref:t},s),{},{components:n})):a.createElement(m,r({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=g;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},441041:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>s});n(827378);var a=n(603905);function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o.apply(this,arguments)}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const r={id:"cli-commands",title:"Commands",description:"Descriptions of all commands available in the CLI."},l=void 0,c={unversionedId:"local-dev/cli-commands",id:"local-dev/cli-commands",title:"Commands",description:"Descriptions of all commands available in the CLI.",source:"@site/../docs/local-dev/cli-commands.md",sourceDirName:"local-dev",slug:"/local-dev/cli-commands",permalink:"/docs/local-dev/cli-commands",draft:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/local-dev/cli-commands.md",tags:[],version:"current",frontMatter:{id:"cli-commands",title:"Commands",description:"Descriptions of all commands available in the CLI."},sidebar:"docs",previous:{title:"Build System",permalink:"/docs/local-dev/cli-build-system"},next:{title:"Linking in Local Packages",permalink:"/docs/local-dev/linking-local-packages"}},p={},s=[{value:"help",id:"help",level:2},{value:"repo build",id:"repo-build",level:2},{value:"repo lint",id:"repo-lint",level:2},{value:"package start",id:"package-start",level:2},{value:"package build",id:"package-build",level:2},{value:"package lint",id:"package-lint",level:2},{value:"package test",id:"package-test",level:2},{value:"package clean",id:"package-clean",level:2},{value:"package prepack",id:"package-prepack",level:2},{value:"package postpack",id:"package-postpack",level:2},{value:"new",id:"new",level:2},{value:"config:docs",id:"configdocs",level:2},{value:"config:print",id:"configprint",level:2},{value:"config:check",id:"configcheck",level:2},{value:"config:schema",id:"configschema",level:2},{value:"versions:bump",id:"versionsbump",level:2},{value:"versions:check",id:"versionscheck",level:2},{value:"build-workspace",id:"build-workspace",level:2},{value:"create-github-app",id:"create-github-app",level:2},{value:"info",id:"info",level:2}],u={toc:s};function d(e){var{components:t}=e,n=i(e,["components"]);return(0,a.kt)("wrapper",o({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This page lists all commands provided by the Backstage CLI, what they're for,\nand where to use them."),(0,a.kt)("h2",o({},{id:"help"}),"help"),(0,a.kt)("p",null,"This command displays a help summary or detailed help screens for each command.\nBelow is a cleaned up output of ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn backstage-cli --help")),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"repo [command]        Command that run across an entire Backstage project\npackage [command]     Lifecycle scripts for individual packages\nmigrate [command]     Migration utilities\n\ncreate                Open up an interactive guide to creating new things in your app\n\nconfig:docs           Browse the configuration reference documentation\nconfig:print          Print the app configuration for the current package\nconfig:check          Validate that the given configuration loads and matches schema\nconfig:schema         Dump the app configuration schema\n\nversions:bump         Bump Backstage packages to the latest versions\nversions:check        Check Backstage package versioning\n\nbuild-workspace       Builds a temporary dist workspace from the provided packages\ncreate-github-app     Create new GitHub App in your organization (experimental)\n\ninfo                  Show helpful information for debugging and reporting bugs\nhelp [command]        display help for command\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"package")," command category, ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn backstage-cli package --help")),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"start [options]       Start a package for local development\nbuild [options]       Build a package for production deployment or publishing\nlint [options]        Lint a package\ntest                  Run tests, forwarding args to Jest, defaulting to watch mode\nclean                 Delete cache directories\nprepack               Prepares a package for packaging before publishing\npostpack              Restores the changes made by the prepack command\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"repo")," command category, ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn backstage-cli repo --help")),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"build [options]       Build packages in the project, excluding bundled app and backend packages.\nlint [options]        Lint all packages in the project\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"migrate")," command category, ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn backstage-cli migrate --help")),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"package-roles         Add package role field to packages that don't have it\npackage-scripts       Set package scripts according to each package role\npackage-lint-configs  Migrates all packages to use @backstage/cli/config/eslint-factory\n")),(0,a.kt)("h2",o({},{id:"repo-build"}),"repo build"),(0,a.kt)("p",null,"Builds all packages in the project, excluding bundled packages by default, i.e. ones\nwith the role ",(0,a.kt)("inlineCode",{parentName:"p"},"'frontend'")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"'backend'"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli repo build [options]\n\nBuild packages in the project, excluding bundled app and backend packages.\n\nOptions:\n  --all          Build all packages, including bundled app and backend packages.\n  --since &lt;ref&gt;  Only build packages and their dev dependents that changed since the specified ref\n")),(0,a.kt)("h2",o({},{id:"repo-lint"}),"repo lint"),(0,a.kt)("p",null,"Lint all packages in the project."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),'Usage: backstage-cli repo lint [options]\n\nLint all packages in the project\n\nOptions:\n  --format &lt;format&gt;  Lint report output format (default: "eslint-formatter-friendly")\n  --since &lt;ref&gt;      Only lint packages that changed since the specified ref\n  --fix              Attempt to automatically fix violations\n')),(0,a.kt)("h2",o({},{id:"package-start"}),"package start"),(0,a.kt)("p",null,"Starts the package for local development. See the frontend and backend development parts in the build system ",(0,a.kt)("a",o({parentName:"p"},{href:"/docs/local-dev/cli-build-system#bundling"}),"bundling")," section for more details."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli package start [options]\n\nStart a package for local development\n\nOptions:\n  --config &lt;path&gt;  Config files to load instead of app-config.yaml (default: [])\n  --role &lt;name&gt;    Run the command with an explicit package role\n  --check          Enable type checking and linting if available\n  --inspect        Enable debugger in Node.js environments\n  --inspect-brk    Enable debugger in Node.js environments, breaking before code starts\n")),(0,a.kt)("h2",o({},{id:"package-build"}),"package build"),(0,a.kt)("p",null,"Build an individual package based on its role. See the build system ",(0,a.kt)("a",o({parentName:"p"},{href:"/docs/local-dev/cli-build-system#building"}),"building")," and ",(0,a.kt)("a",o({parentName:"p"},{href:"/docs/local-dev/cli-build-system#bundling"}),"bundling")," sections for more details."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli package build [options]\n\nBuild a package for production deployment or publishing\n\nOptions:\n  --role &lt;name&gt;              Run the command with an explicit package role\n  --minify                   Minify the generated code. Does not apply to app or backend packages.\n  --skip-build-dependencies  Skip the automatic building of local dependencies. Applies to backend packages only.\n  --stats                    If bundle stats are available, write them to the output directory. Applies to app packages only.\n  --config &lt;path&gt;            Config files to load instead of app-config.yaml. Applies to app packages only. (default: [])\n")),(0,a.kt)("h2",o({},{id:"package-lint"}),"package lint"),(0,a.kt)("p",null,"Lint a package. In addition to the default ",(0,a.kt)("inlineCode",{parentName:"p"},"eslint")," behavior, this command will\ninclude TypeScript files, treat warnings as errors, and default to linting the\nentire directory if no specific files are listed. For more information, see the\nbuild system ",(0,a.kt)("a",o({parentName:"p"},{href:"/docs/local-dev/cli-build-system#linting"}),"linting")," section."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),'Usage: backstage-cli package lint [options]\n\nLint a package\n\nOptions:\n  --format &lt;format&gt;  Lint report output format (default: "eslint-formatter-friendly")\n  --fix              Attempt to automatically fix violations\n')),(0,a.kt)("h2",o({},{id:"package-test"}),"package test"),(0,a.kt)("p",null,"Run tests, forwarding all unknown options to Jest, and defaulting to watch mode.\nWhen executing the tests, ",(0,a.kt)("inlineCode",{parentName:"p"},"process.env.NODE_ENV")," will be set to ",(0,a.kt)("inlineCode",{parentName:"p"},'"test"'),"."),(0,a.kt)("p",null,"This command uses a default Jest configuration that is included in the CLI,\nwhich is set up with similar goals for speed, scale, and working within a\nmonorepo. The configuration sets the ",(0,a.kt)("inlineCode",{parentName:"p"},"src")," as the root directory, enforces the\n",(0,a.kt)("inlineCode",{parentName:"p"},".test.")," infix for tests, and uses ",(0,a.kt)("inlineCode",{parentName:"p"},"src/setupTests.ts")," as the test setup\nlocation. The included configuration also supports test execution at the root of\na yarn workspaces monorepo by automatically creating one grouped configuration\nthat includes all packages that have ",(0,a.kt)("inlineCode",{parentName:"p"},"backstage-cli test")," in their package\n",(0,a.kt)("inlineCode",{parentName:"p"},"test")," script."),(0,a.kt)("p",null,"For more information about configuration overrides and editor support, see the ",(0,a.kt)("a",o({parentName:"p"},{href:"/docs/local-dev/cli-build-system#jest-configuration"}),"Jest Configuration section")," in the build system documentation."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli package test [options]\n\nRun tests, forwarding args to Jest, defaulting to watch mode\n\nOptions:\n  --backstage-cli-help    display help for command\n")),(0,a.kt)("h2",o({},{id:"package-clean"}),"package clean"),(0,a.kt)("p",null,"Remove cache and output directories."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli package clean [options]\n\nDelete cache directories\n")),(0,a.kt)("h2",o({},{id:"package-prepack"}),"package prepack"),(0,a.kt)("p",null,"This command should be added as ",(0,a.kt)("inlineCode",{parentName:"p"},"scripts.prepack")," in all packages. It enables\npackaging- and publish-time overrides for fields inside ",(0,a.kt)("inlineCode",{parentName:"p"},"packages.json"),".\nFor more details, see the build system ",(0,a.kt)("a",o({parentName:"p"},{href:"/docs/local-dev/cli-build-system#publishing"}),"publishing")," section."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli package prepack [options]\n\nPrepares a package for packaging before publishing\n")),(0,a.kt)("h2",o({},{id:"package-postpack"}),"package postpack"),(0,a.kt)("p",null,"This should be added as ",(0,a.kt)("inlineCode",{parentName:"p"},"scripts.postpack")," in all packages. It restores\n",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," to what it looked like before calling the ",(0,a.kt)("inlineCode",{parentName:"p"},"prepack")," command."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli package postpack [options]\n\nRestores the changes made by the prepack command\n")),(0,a.kt)("h2",o({},{id:"new"}),"new"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"new")," command opens up an interactive guide for you to create new things\nin your app. If you do not pass in any options it is completely interactive, but\nit is possible to pre-select what you want to create using the ",(0,a.kt)("inlineCode",{parentName:"p"},"--select")," flag,\nand provide options using ",(0,a.kt)("inlineCode",{parentName:"p"},"--option"),", for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"backstage-cli new --select plugin --option id=foo\n")),(0,a.kt)("p",null,"This command is typically added as script in the root ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," to be\nexecuted with ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn backstage-create"),", using options that are appropriate for\nthe organization that owns the app repo. For example you may have it set up like\nthis:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-json"}),'{\n  "scripts": {\n    "backstage-create": "backstage-cli create --scope internal --no-private --npm-registry https://acme.org/npm"\n  }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli create [options]\n\nOptions:\n  --select &lt;name&gt;          Select the thing you want to be creating upfront\n  --option &lt;name&gt;=&lt;value&gt;  Pre-fill options for the creation process (default: [])\n  --scope &lt;scope&gt;          The scope to use for new packages\n  --npm-registry &lt;URL&gt;     The package registry to use for new packages\n  --no-private             Do not mark new packages as private\n  -h, --help               display help for command\n")),(0,a.kt)("h2",o({},{id:"configdocs"}),"config:docs"),(0,a.kt)("p",null,"This commands opens up the reference documentation of your apps local\nconfiguration schema in the browser. This is useful to get an overview of what\nconfiguration values are available to use, a description of what they do and\ntheir format, and where they get sent."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli config:docs [options]\n\nBrowse the configuration reference documentation\n\nOptions:\n  --package &lt;name&gt;  Only include the schema that applies to the given package\n  -h, --help        display help for command\n")),(0,a.kt)("h2",o({},{id:"configprint"}),"config:print"),(0,a.kt)("p",null,"Print the static configuration, defaulting to reading ",(0,a.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," in the\nrepo root, using schema collected from all local packages in the repo."),(0,a.kt)("p",null,"For example, to validate that a given configuration value is visible in the\nfrontend when building the ",(0,a.kt)("inlineCode",{parentName:"p"},"my-app")," package, you can use the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-bash"}),"yarn backstage-cli config:print --frontend --package my-app\n")),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli config:print [options]\n\nOptions:\n  --package &lt;name&gt;   Only load config schema that applies to the given package\n  --lax              Do not require environment variables to be set\n  --frontend         Print only the frontend configuration\n  --with-secrets     Include secrets in the printed configuration\n  --format &lt;format&gt;  Format to print the configuration in, either json or yaml [yaml]\n  --config &lt;path&gt;    Config files to load instead of app-config.yaml (default: [])\n  -h, --help         display help for command\n")),(0,a.kt)("h2",o({},{id:"configcheck"}),"config:check"),(0,a.kt)("p",null,"Validate that static configuration loads and matches schema, defaulting to\nreading ",(0,a.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," in the repo root and using schema collected from all\nlocal packages in the repo."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli config:check [options]\n\nOptions:\n  --package &lt;name&gt;  Only load config schema that applies to the given package\n  --lax             Do not require environment variables to be set\n  --frontend        Only validate the frontend configuration\n  --deprecated      List all deprecated configuration settings\n  --config &lt;path&gt;   Config files to load instead of app-config.yaml (default: [])\n  -h, --help        display help for command\n")),(0,a.kt)("h2",o({},{id:"configschema"}),"config:schema"),(0,a.kt)("p",null,"Dump the configuration schema that was collected from all local packages in the\nrepo."),(0,a.kt)("p",null,"Note: when run by ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn"),", supply the yarn option ",(0,a.kt)("inlineCode",{parentName:"p"},"--silent")," if you are using the\noutput in a command line pipe to avoid non schema output in the pipeline."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli config:schema [options]\n\nPrint configuration schema\n\nOptions:\n  --package &lt;name&gt;   Only output config schema that applies to the given package\n  --format &lt;format&gt;  Format to print the schema in, either json or yaml [yaml]\n  -h, --help         display help for command\n")),(0,a.kt)("h2",o({},{id:"versionsbump"}),"versions:bump"),(0,a.kt)("p",null,"Bump all ",(0,a.kt)("inlineCode",{parentName:"p"},"@backstage")," packages to the latest versions. This checks for updates\nin the package registry, and will update entries both in ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn.lock")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," files when necessary."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),'Usage: backstage-cli versions:bump [options]\n\nOptions:\n  -h, --help        display help for command\n  --pattern &lt;glob&gt;  Override glob for matching packages to upgrade\n  --release &lt;version|next|main&gt; Bump to a specific Backstage release line or version (default: "main")\n')),(0,a.kt)("h2",o({},{id:"versionscheck"}),"versions:check"),(0,a.kt)("p",null,"Validate ",(0,a.kt)("inlineCode",{parentName:"p"},"@backstage")," dependencies within the repo, making sure that there are\nno duplicates of packages that might lead to breakages."),(0,a.kt)("p",null,"By supplying the ",(0,a.kt)("inlineCode",{parentName:"p"},"--fix")," flag the command will attempt to fix any conflict that\ncan be resolved by editing ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn.lock"),", but will not attempt to search for\nremote updates or modify any ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," files."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli versions:check [options]\n\nOptions:\n  --fix       Fix any auto-fixable versioning problems\n  -h, --help  display help for command\n")),(0,a.kt)("h2",o({},{id:"build-workspace"}),"build-workspace"),(0,a.kt)("p",null,"Builds a mirror of the workspace using the packaged production version of each\npackage. This essentially calls ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn pack")," in each included package and unpacks\nthe resulting archive in the target ",(0,a.kt)("inlineCode",{parentName:"p"},"workspace-dir"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli build-workspace [options] <workspace-dir>\n")),(0,a.kt)("h2",o({},{id:"create-github-app"}),"create-github-app"),(0,a.kt)("p",null,"Creates a GitHub App in your GitHub organization. This is an alternative to\ntoken-based ",(0,a.kt)("a",o({parentName:"p"},{href:"/docs/integrations/github/locations"}),"GitHub integration"),". See\n",(0,a.kt)("a",o({parentName:"p"},{href:"/docs/integrations/github/github-apps"}),"GitHub Apps for Backstage Authentication"),"."),(0,a.kt)("p",null,"Launches a browser to create the App through GitHub and saves the result as a\nYAML file that can be referenced in the GitHub integration configuration."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli create-github-app <github-org>\n")),(0,a.kt)("h2",o({},{id:"info"}),"info"),(0,a.kt)("p",null,"Outputs debug information which is useful when opening an issue. Outputs system\ninformation, node.js and npm versions, CLI version and type (inside backstage\nrepo or a created app), all ",(0,a.kt)("inlineCode",{parentName:"p"},"@backstage/*")," package dependency versions."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-text"}),"Usage: backstage-cli info\n")))}d.isMDXComponent=!0},862525:e=>{var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(e){a[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(o){return!1}}()?Object.assign:function(e,i){for(var r,l,c=o(e),p=1;p<arguments.length;p++){for(var s in r=Object(arguments[p]))n.call(r,s)&&(c[s]=r[s]);if(t){l=t(r);for(var u=0;u<l.length;u++)a.call(r,l[u])&&(c[l[u]]=r[l[u]])}}return c}},541535:(e,t,n)=>{var a=n(862525),o=60103,i=60106;var r=60109,l=60110,c=60112;var p=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var u=Symbol.for;o=u("react.element"),i=u("react.portal"),u("react.fragment"),u("react.strict_mode"),u("react.profiler"),r=u("react.provider"),l=u("react.context"),c=u("react.forward_ref"),u("react.suspense"),p=u("react.memo"),s=u("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},k={};function f(e,t,n){this.props=e,this.context=t,this.refs=k,this.updater=n||m}function h(){}function b(e,t,n){this.props=e,this.context=t,this.refs=k,this.updater=n||m}f.prototype.isReactComponent={},f.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},f.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},h.prototype=f.prototype;var y=b.prototype=new h;y.constructor=b,a(y,f.prototype),y.isPureReactComponent=!0;var v={current:null},w=Object.prototype.hasOwnProperty,N={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var a,i={},r=null,l=null;if(null!=t)for(a in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(r=""+t.key),t)w.call(t,a)&&!N.hasOwnProperty(a)&&(i[a]=t[a]);var c=arguments.length-2;if(1===c)i.children=n;else if(1<c){for(var p=Array(c),s=0;s<c;s++)p[s]=arguments[s+2];i.children=p}if(e&&e.defaultProps)for(a in c=e.defaultProps)void 0===i[a]&&(i[a]=c[a]);return{$$typeof:o,type:e,key:r,ref:l,props:i,_owner:v.current}}function C(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var j=/\/+/g;function x(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function S(e,t,n,a,r){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var c=!1;if(null===e)c=!0;else switch(l){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case o:case i:c=!0}}if(c)return r=r(c=e),e=""===a?"."+x(c,0):a,Array.isArray(r)?(n="",null!=e&&(n=e.replace(j,"$&/")+"/"),S(r,t,n,"",(function(e){return e}))):null!=r&&(C(r)&&(r=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(r,n+(!r.key||c&&c.key===r.key?"":(""+r.key).replace(j,"$&/")+"/")+e)),t.push(r)),1;if(c=0,a=""===a?".":a+":",Array.isArray(e))for(var p=0;p<e.length;p++){var s=a+x(l=e[p],p);c+=S(l,t,n,s,r)}else if(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"==typeof s)for(e=s.call(e),p=0;!(l=e.next()).done;)c+=S(l=l.value,t,n,s=a+x(l,p++),r);else if("object"===l)throw t=""+e,Error(g(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return c}function P(e,t,n){if(null==e)return e;var a=[],o=0;return S(e,a,"","",(function(e){return t.call(n,e,o++)})),a}function T(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var U={current:null};function _(){var e=U.current;if(null===e)throw Error(g(321));return e}},827378:(e,t,n)=>{n(541535)}}]);