/*! For license information please see 47842741.87b5bb8c.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[862914],{603905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=r,g=p["".concat(c,".").concat(d)]||p[d]||h[d]||o;return n?a.createElement(g,i(i({ref:t},u),{},{components:n})):a.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},600554:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>u});n(827378);var a=n(603905);function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const i={id:"search-engines",title:"Search Engines",description:"Choosing and configuring your search engine for Backstage"},s=void 0,c={unversionedId:"features/search/search-engines",id:"features/search/search-engines",title:"Search Engines",description:"Choosing and configuring your search engine for Backstage",source:"@site/../docs/features/search/search-engines.md",sourceDirName:"features/search",slug:"/features/search/search-engines",permalink:"/docs/features/search/search-engines",draft:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/features/search/search-engines.md",tags:[],version:"current",frontMatter:{id:"search-engines",title:"Search Engines",description:"Choosing and configuring your search engine for Backstage"},sidebar:"docs",previous:{title:"Search Architecture",permalink:"/docs/features/search/architecture"},next:{title:"How-To guides",permalink:"/docs/features/search/how-to-guides"}},l={},u=[{value:"Lunr",id:"lunr",level:2},{value:"Postgres",id:"postgres",level:2},{value:"Optional Configuration",id:"optional-configuration",level:2},{value:"Elasticsearch",id:"elasticsearch",level:2},{value:"Set custom index template",id:"set-custom-index-template",level:4},{value:"Example configurations",id:"example-configurations",level:2},{value:"AWS",id:"aws",level:3},{value:"Elastic.co",id:"elasticco",level:3},{value:"OpenSearch",id:"opensearch",level:3},{value:"Others",id:"others",level:3},{value:"Configuration examples",id:"configuration-examples",level:4},{value:"With username and password",id:"with-username-and-password",level:5},{value:"With API key",id:"with-api-key",level:5},{value:"Elasticsearch batch size",id:"elasticsearch-batch-size",level:3},{value:"Configuration example",id:"configuration-example",level:4}],p={toc:u};function h(e){var{components:t}=e,n=o(e,["components"]);return(0,a.kt)("wrapper",r({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Backstage supports 3 search engines by default, an in-memory engine called Lunr,\nElasticsearch and Postgres. You can configure your own search engines by\nimplementing the provided interface as mentioned in the\n",(0,a.kt)("a",r({parentName:"p"},{href:"/docs/features/search/getting-started#Backend"}),"search backend documentation.")),(0,a.kt)("p",null,"Provided search engine implementations have their own way of constructing\nqueries, which may be something you want to modify. Alterations to the querying\nlogic of a search engine can be made by providing your own implementation of a\nQueryTranslator interface. This modification can be done without touching\nprovided search engines by using the exposed setter to set the modified query\ntranslator into the instance."),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-typescript"}),"const searchEngine = new LunrSearchEngine({ logger: env.logger });\nsearchEngine.setTranslator(new MyNewAndBetterQueryTranslator());\n")),(0,a.kt)("h2",r({},{id:"lunr"}),"Lunr"),(0,a.kt)("p",null,"Lunr search engine is enabled by default for your backstage instance if you have\nnot done additional changes to the scaffolded app."),(0,a.kt)("p",null,"Lunr can be instantiated like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-typescript"}),"// app/backend/src/plugins/search.ts\nconst searchEngine = new LunrSearchEngine({ logger: env.logger });\nconst indexBuilder = new IndexBuilder({ logger: env.logger, searchEngine });\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: Lunr is appropriate as a zero-config search engine when developing\nother parts of Backstage locally, however its use is highly discouraged when\nrunning Backstage in production. When deploying Backstage, use one of the\nother search engines instead.")),(0,a.kt)("h2",r({},{id:"postgres"}),"Postgres"),(0,a.kt)("p",null,"The Postgres based search engine only requires that postgres being configured as\nthe database engine for Backstage. Therefore it targets setups that want to\navoid maintaining another external service like Elasticsearch. The search\nprovides decent results and performs well with ten thousands of indexed\ndocuments. The connection to postgres is established via the database manager\nalso used by other plugins."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Important"),": The search plugin requires at least Postgres 12!")),(0,a.kt)("p",null,"To use the ",(0,a.kt)("inlineCode",{parentName:"p"},"PgSearchEngine"),", make sure that you have a Postgres database\nconfigured and make the following changes to your backend:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add a dependency on ",(0,a.kt)("inlineCode",{parentName:"li"},"@backstage/plugin-search-backend-module-pg")," to your\nbackend's ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json"),"."),(0,a.kt)("li",{parentName:"ol"},"Initialize the search engine. It is recommended to initialize it with a\nfallback to the lunr search engine if you are running Backstage for\ndevelopment locally with SQLite:")),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-typescript"}),"// In packages/backend/src/plugins/search.ts\n\n// Initialize a connection to a search engine.\nconst searchEngine = (await PgSearchEngine.supported(env.database))\n  ? await PgSearchEngine.fromConfig(env.config, { database: env.database })\n  : new LunrSearchEngine({ logger: env.logger });\n")),(0,a.kt)("h2",r({},{id:"optional-configuration"}),"Optional Configuration"),(0,a.kt)("p",null,"The following is an example of the optional configuration that can be applied when using Postgres as the search backend. Currently this is mostly for just the highlight feature:"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-yaml"}),"search:\n  pg:\n    highlightOptions:\n      useHighlight: true # Used to enable to disable the highlight feature. The default value is true\n      maxWord: 35 # Used to set the longest headlines to output. The default value is 35.\n      minWord: 15 # Used to set the shortest headlines to output. The default value is 15.\n      shortWord: 3 # Words of this length or less will be dropped at the start and end of a headline, unless they are query terms. The default value of three (3) eliminates common English articles.\n      highlightAll: false # If true the whole document will be used as the headline, ignoring the preceding three parameters. The default is false.\n      maxFragments: 0 # Maximum number of text fragments to display. The default value of zero selects a non-fragment-based headline generation method. A value greater than zero selects fragment-based headline generation (see the linked documentation above for more details).\n      fragmentDelimiter: ' ... ' # Delimiter string used to concatenate fragments. Defaults to \" ... \".\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:")," the highlight search term feature uses ",(0,a.kt)("inlineCode",{parentName:"p"},"ts_headline")," which has been known to potentially impact performance. You only need this minimal config to disable it should you have issues:"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-yaml"}),"search:\n  pg:\n    highlightOptions:\n      useHighlight: false\n")),(0,a.kt)("p",null,"The Postgres documentation on ",(0,a.kt)("a",r({parentName:"p"},{href:"https://www.postgresql.org/docs/current/textsearch-controls.html#TEXTSEARCH-HEADLINE"}),"Highlighting Results")," has more details."),(0,a.kt)("h2",r({},{id:"elasticsearch"}),"Elasticsearch"),(0,a.kt)("p",null,"Backstage supports Elasticsearch (and OpenSearch) search engine connections,\nindexing and querying out of the box. Available configuration options enable\nusage of either AWS or Elastic.co hosted solutions, or a custom self-hosted solution."),(0,a.kt)("p",null,"Similarly to Lunr above, Elasticsearch can be set up like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-typescript"}),"// app/backend/src/plugins/search.ts\nconst searchEngine = await ElasticSearchSearchEngine.fromConfig({\n  logger: env.logger,\n  config: env.config,\n});\nconst indexBuilder = new IndexBuilder({ logger: env.logger, searchEngine });\n")),(0,a.kt)("p",null,"For the engine to be available, your backend package needs a dependency on\npackage ",(0,a.kt)("inlineCode",{parentName:"p"},"@backstage/plugin-search-backend-module-elasticsearch"),"."),(0,a.kt)("p",null,"Elasticsearch needs some additional configuration before it is ready to use\nwithin your instance. The configuration options are documented in the\n",(0,a.kt)("a",r({parentName:"p"},{href:"https://github.com/backstage/backstage/blob/master/plugins/search-backend-module-elasticsearch/config.d.ts"}),"configuration schema definition file.")),(0,a.kt)("p",null,"The underlying functionality uses either the official Elasticsearch client\nversion 7.x (meaning that Elasticsearch version 7 is the only one confirmed to\nbe supported), or the OpenSearch client, when the ",(0,a.kt)("inlineCode",{parentName:"p"},"aws")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"opensearch "),"provider\nis configured."),(0,a.kt)("p",null,"Should you need to create your own bespoke search experiences that require more\nthan just a query translator (such as faceted search or Relay pagination), you\ncan access the configuration of the search engine in order to create new\nElasticsearch clients. The version of the client need not be the same as one\nused internally by the Elasticsearch engine plugin. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-typescript"}),"import { isOpenSearchCompatible } from '@backstage/plugin-search-backend-module-elasticsearch';\nimport { Client as ElasticClient } from '@elastic/elasticsearch';\nimport { Client as OpenSearchClient } from '@opensearch-project/opensearch';\n\n// Return an Elasticsearch client\nconst esClient = searchEngine.newClient<ElasticClient>(options => {\n  if (!isOpenSearchCompatible(options)) {\n    return new ElasticClient(options);\n  }\n\n  throw new Error('Incompatible options');\n});\n\n// Return an OpenSearch client\nconst osClient = searchEngine.newClient<OpenSearchClient>(options => {\n  if (isOpenSearchCompatible(options)) {\n    return new OpenSearchClient(options);\n  }\n\n  throw new Error('Incompatible options');\n});\n")),(0,a.kt)("h4",r({},{id:"set-custom-index-template"}),"Set custom index template"),(0,a.kt)("p",null,"The Elasticsearch engine gives you the ability to set a custom index template if needed."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Index templates define settings, mappings, and aliases that can be applied automatically to new indices.")),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-typescript"}),"// app/backend/src/plugins/search.ts\nconst searchEngine = await ElasticSearchSearchEngine.initialize({\n  logger: env.logger,\n  config: env.config,\n});\n\nsearchEngine.setIndexTemplate({\n  name: '<name-of-your-custom-template>',\n  body: {\n    index_patterns: ['<your-index-pattern>'],\n    template: {\n      mappings: {},\n      settings: {},\n    },\n  },\n});\n")),(0,a.kt)("h2",r({},{id:"example-configurations"}),"Example configurations"),(0,a.kt)("h3",r({},{id:"aws"}),"AWS"),(0,a.kt)("p",null,"Using AWS hosted Elasticsearch the only configuration option needed is the URL\nto the Elasticsearch service. The implementation assumes that environment\nvariables for AWS access key id and secret access key are defined in accordance\nto the\n",(0,a.kt)("a",r({parentName:"p"},{href:"https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html"}),"default AWS credential chain."),"."),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-yaml"}),"search:\n  elasticsearch:\n    provider: aws\n    node: https://my-backstage-search-asdfqwerty.eu-west-1.es.amazonaws.com\n")),(0,a.kt)("h3",r({},{id:"elasticco"}),"Elastic.co"),(0,a.kt)("p",null,"Elastic Cloud hosted Elasticsearch uses a Cloud ID to determine the instance of\nhosted Elasticsearch to connect to. Additionally, username and password needs to\nbe provided either directly or using environment variables like defined in\n",(0,a.kt)("a",r({parentName:"p"},{href:"https://backstage.io/docs/conf/writing#includes-and-dynamic-data"}),"Backstage documentation.")),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-yaml"}),"search:\n  elasticsearch:\n    provider: elastic\n    cloudId: backstage-elastic:asdfqwertyasdfqwertyasdfqwertyasdfqwerty==\n    auth:\n      username: elastic\n      password: changeme\n")),(0,a.kt)("h3",r({},{id:"opensearch"}),"OpenSearch"),(0,a.kt)("p",null,"OpenSearch can be self hosted for example with the ",(0,a.kt)("a",r({parentName:"p"},{href:"https://hub.docker.com/r/opensearchproject/opensearch"}),"official docker image"),". The configuration requires only the node and authentication."),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-yaml"}),"search:\n  elasticsearch:\n    provider: opensearch\n    node: http://0.0.0.0:9200\n    auth:\n      username: opensearch\n      password: changeme\n")),(0,a.kt)("h3",r({},{id:"others"}),"Others"),(0,a.kt)("p",null,"Other Elasticsearch instances can be connected to by using standard\nElasticsearch authentication methods and exposed URL, provided that the cluster\nsupports that. The configuration options needed are the URL to the node and\nauthentication information. Authentication can be handled by either providing\nusername/password or an API key. For more information how to create an API key,\nsee\n",(0,a.kt)("a",r({parentName:"p"},{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html"}),"Elastic documentation on API keys"),"."),(0,a.kt)("h4",r({},{id:"configuration-examples"}),"Configuration examples"),(0,a.kt)("h5",r({},{id:"with-username-and-password"}),"With username and password"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-yaml"}),"search:\n  elasticsearch:\n    node: http://localhost:9200\n    auth:\n      username: elastic\n      password: changeme\n")),(0,a.kt)("h5",r({},{id:"with-api-key"}),"With API key"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-yaml"}),"search:\n  elasticsearch:\n    node: http://localhost:9200\n    auth:\n      apiKey: base64EncodedKey\n")),(0,a.kt)("h3",r({},{id:"elasticsearch-batch-size"}),"Elasticsearch batch size"),(0,a.kt)("p",null,"Default batch size of the Elasticsearch engine is set to 1000. If you are using a lower spec computing resources (like AWS small instance),\nyou may get an error caused by limited ",(0,a.kt)("inlineCode",{parentName:"p"},"thread_pool")," configuration. ( ",(0,a.kt)("inlineCode",{parentName:"p"},"429 Too Many Requests /_bulk")," )"),(0,a.kt)("p",null,"In this case you need to decrease the batch size to index the resources to prevent this kind of error. You can easily decrease\nor increase the batch size in your ",(0,a.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," using the ",(0,a.kt)("inlineCode",{parentName:"p"},"batchSize")," option provided for Elasticsearch configuration."),(0,a.kt)("h4",r({},{id:"configuration-example"}),"Configuration example"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Set batch size to 100")),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-yaml"}),"search:\n  elasticsearch:\n    batchSize: 100\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"You can also increase the batch size if you are using a large ES instance.")))}h.isMDXComponent=!0},862525:e=>{var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function r(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(e){a[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(r){return!1}}()?Object.assign:function(e,o){for(var i,s,c=r(e),l=1;l<arguments.length;l++){for(var u in i=Object(arguments[l]))n.call(i,u)&&(c[u]=i[u]);if(t){s=t(i);for(var p=0;p<s.length;p++)a.call(i,s[p])&&(c[s[p]]=i[s[p]])}}return c}},541535:(e,t,n)=>{var a=n(862525),r=60103,o=60106;var i=60109,s=60110,c=60112;var l=60115,u=60116;if("function"==typeof Symbol&&Symbol.for){var p=Symbol.for;r=p("react.element"),o=p("react.portal"),p("react.fragment"),p("react.strict_mode"),p("react.profiler"),i=p("react.provider"),s=p("react.context"),c=p("react.forward_ref"),p("react.suspense"),l=p("react.memo"),u=p("react.lazy")}var h="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f={};function m(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||g}function y(){}function k(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||g}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(d(85));this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=m.prototype;var b=k.prototype=new y;b.constructor=k,a(b,m.prototype),b.isPureReactComponent=!0;var v={current:null},w=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var a,o={},i=null,s=null;if(null!=t)for(a in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(i=""+t.key),t)w.call(t,a)&&!E.hasOwnProperty(a)&&(o[a]=t[a]);var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];o.children=l}if(e&&e.defaultProps)for(a in c=e.defaultProps)void 0===o[a]&&(o[a]=c[a]);return{$$typeof:r,type:e,key:i,ref:s,props:o,_owner:v.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===r}var S=/\/+/g;function x(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function j(e,t,n,a,i){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var c=!1;if(null===e)c=!0;else switch(s){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case r:case o:c=!0}}if(c)return i=i(c=e),e=""===a?"."+x(c,0):a,Array.isArray(i)?(n="",null!=e&&(n=e.replace(S,"$&/")+"/"),j(i,t,n,"",(function(e){return e}))):null!=i&&(N(i)&&(i=function(e,t){return{$$typeof:r,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||c&&c.key===i.key?"":(""+i.key).replace(S,"$&/")+"/")+e)),t.push(i)),1;if(c=0,a=""===a?".":a+":",Array.isArray(e))for(var l=0;l<e.length;l++){var u=a+x(s=e[l],l);c+=j(s,t,n,u,i)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=h&&e[h]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),l=0;!(s=e.next()).done;)c+=j(s=s.value,t,n,u=a+x(s,l++),i);else if("object"===s)throw t=""+e,Error(d(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return c}function C(e,t,n){if(null==e)return e;var a=[],r=0;return j(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function P(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var T={current:null};function q(){var e=T.current;if(null===e)throw Error(d(321));return e}},827378:(e,t,n)=>{n(541535)}}]);