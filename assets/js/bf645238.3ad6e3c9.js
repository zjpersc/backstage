/*! For license information please see bf645238.3ad6e3c9.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[86400],{603905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),h=o,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||r;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},917322:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});n(827378);var a=n(603905);function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o.apply(this,arguments)}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const i={id:"using-cloud-storage",title:"Using Cloud Storage for TechDocs generated files",description:"Using Cloud Storage for TechDocs generated files"},c=void 0,s={unversionedId:"features/techdocs/using-cloud-storage",id:"features/techdocs/using-cloud-storage",title:"Using Cloud Storage for TechDocs generated files",description:"Using Cloud Storage for TechDocs generated files",source:"@site/../docs/features/techdocs/using-cloud-storage.md",sourceDirName:"features/techdocs",slug:"/features/techdocs/using-cloud-storage",permalink:"/docs/features/techdocs/using-cloud-storage",draft:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/features/techdocs/using-cloud-storage.md",tags:[],version:"current",frontMatter:{id:"using-cloud-storage",title:"Using Cloud Storage for TechDocs generated files",description:"Using Cloud Storage for TechDocs generated files"},sidebar:"docs",previous:{title:"TechDocs Configuration Options",permalink:"/docs/features/techdocs/configuration"},next:{title:"Configuring CI/CD to generate and publish TechDocs sites",permalink:"/docs/features/techdocs/configuring-ci-cd"}},l={},u=[{value:"Configuring Google GCS Bucket with TechDocs",id:"configuring-google-gcs-bucket-with-techdocs",level:2},{value:"Configuring AWS S3 Bucket with TechDocs",id:"configuring-aws-s3-bucket-with-techdocs",level:2},{value:"Configuring Azure Blob Storage Container with TechDocs",id:"configuring-azure-blob-storage-container-with-techdocs",level:2},{value:"Configuring OpenStack Swift Container with TechDocs",id:"configuring-openstack-swift-container-with-techdocs",level:2},{value:"Bonus: Migration from old OpenStack Swift Configuration",id:"bonus-migration-from-old-openstack-swift-configuration",level:2},{value:"Step 1: Change the credential keys",id:"step-1-change-the-credential-keys",level:5},{value:"Step 2: Remove the unused keys",id:"step-2-remove-the-unused-keys",level:5},{value:"Step 3: Add Swift URL",id:"step-3-add-swift-url",level:5},{value:"That&#39;s it!",id:"thats-it",level:5}],p={toc:u};function d(e){var{components:t}=e,n=r(e,["components"]);return(0,a.kt)("wrapper",o({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In the ",(0,a.kt)("a",o({parentName:"p"},{href:"/docs/features/techdocs/architecture"}),"TechDocs architecture"),' you have the option to choose\nwhere you want to store the Generated static files which TechDocs uses to render\ndocumentation. In both the "Basic" and "Recommended" setup, you can add cloud\nstorage providers like Google GCS, Amazon AWS S3, etc. By default, TechDocs uses\nthe local filesystem of the ',(0,a.kt)("inlineCode",{parentName:"p"},"techdocs-backend"),' plugin in the "Basic" setup. And\nin the recommended setup, having one of the cloud storage is a prerequisite.\nRead more on the TechDocs Architecture documentation page.'),(0,a.kt)("p",null,"On this page you can read how to enable them."),(0,a.kt)("h2",o({},{id:"configuring-google-gcs-bucket-with-techdocs"}),"Configuring Google GCS Bucket with TechDocs"),(0,a.kt)("p",null,"Follow the\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://googleapis.dev/nodejs/storage/latest/index.html#quickstart"}),"official Google Cloud documentation"),"\nfor the latest instructions on the following steps involving GCP."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1. Set ",(0,a.kt)("inlineCode",{parentName:"strong"},"techdocs.publisher.type")," config in your ",(0,a.kt)("inlineCode",{parentName:"strong"},"app-config.yaml"))),(0,a.kt)("p",null,"Set ",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs.publisher.type")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"'googleGcs'"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'googleGcs'\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2. Create a GCS Bucket")),(0,a.kt)("p",null,"Create a dedicated Google Cloud Storage bucket for TechDocs sites.\ntechdocs-backend will publish documentation to this bucket. TechDocs will fetch\nfiles from here to serve documentation in Backstage. Note that the bucket names\nare globally unique."),(0,a.kt)("p",null,"Set the config ",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs.publisher.googleGcs.bucketName")," in your\n",(0,a.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," to the name of the bucket you just created. Set\n",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs.publisher.googleGcs.projectId")," to the ID of the Google Cloud project\nthat contains your bucket."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'googleGcs'\n    googleGcs:\n      bucketName: 'name-of-techdocs-storage-bucket'\n      projectId: 'name-of-project'\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3a. (Recommended) Authentication using environment variable")),(0,a.kt)("p",null,"The GCS Node.js client will automatically use the environment variable\n",(0,a.kt)("inlineCode",{parentName:"p"},"GOOGLE_APPLICATION_CREDENTIALS")," to authenticate with Google Cloud. It might\nalready be set in Compute Engine, Google Kubernetes Engine, etc. Read\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://cloud.google.com/docs/authentication/production"}),"https://cloud.google.com/docs/authentication/production")," for more details."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3b. Authentication using app-config.yaml")),(0,a.kt)("p",null,"If you do not prefer (3a) and optionally like to use a service account, you can\nfollow these steps."),(0,a.kt)("p",null,'Create a new Service Account and a key associated with it. In roles of the\nservice account, use "Storage Object Admin".'),(0,a.kt)("p",null,"If you want to create a custom role, make sure to include both ",(0,a.kt)("inlineCode",{parentName:"p"},"get")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"create"),' permissions for both "Objects" and "Buckets". See\n',(0,a.kt)("a",o({parentName:"p"},{href:"https://cloud.google.com/storage/docs/access-control/iam-permissions"}),"https://cloud.google.com/storage/docs/access-control/iam-permissions")),(0,a.kt)("p",null,"A service account can have many keys. Open your newly created account's page (in\nIAM & Admin console), and create a new key. Use JSON format for the key."),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"<GCP-PROJECT-ID-random-uid>.json")," file will be downloaded. This is the secret\nkey TechDocs will use to make API calls. Make it available in your Backstage\nserver and/or your local development server and set it in the app config\n",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs.publisher.googleGcs.credentials"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'googleGcs'\n    googleGcs:\n      bucketName: 'name-of-techdocs-storage-bucket'\n      credentials:\n        $file: '/path/to/google_application_credentials.json'\n")),(0,a.kt)("p",null,"Note: If you are finding it difficult to make the file\n",(0,a.kt)("inlineCode",{parentName:"p"},"google_application_credentials.json")," available on a server, you could use the\nfile's content and set as an environment variable. And then use"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'googleGcs'\n    googleGcs:\n      bucketName: 'name-of-techdocs-storage-bucket'\n      credentials: ${GOOGLE_APPLICATION_CREDENTIALS}\n")),(0,a.kt)("p",null,"Assuming the service account you are using was created in the same project as\nthe bucket, you do not need to set the ",(0,a.kt)("inlineCode",{parentName:"p"},"projectId")," field. If not, you will\nhave to override it as with default credentials:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'googleGcs'\n    googleGcs:\n      bucketName: 'name-of-techdocs-storage-bucket'\n      credentials: ${GOOGLE_APPLICATION_CREDENTIALS}\n      projectId: 'name-of-project'\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"4. That's it!")),(0,a.kt)("p",null,"Your Backstage app is now ready to use Google Cloud Storage for TechDocs, to\nstore and read the static generated documentation files."),(0,a.kt)("h2",o({},{id:"configuring-aws-s3-bucket-with-techdocs"}),"Configuring AWS S3 Bucket with TechDocs"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1. Set ",(0,a.kt)("inlineCode",{parentName:"strong"},"techdocs.publisher.type")," config in your ",(0,a.kt)("inlineCode",{parentName:"strong"},"app-config.yaml"))),(0,a.kt)("p",null,"Set ",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs.publisher.type")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"'awsS3'"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'awsS3'\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2. Create an S3 Bucket")),(0,a.kt)("p",null,"Create a dedicated AWS S3 bucket for the storage of TechDocs sites.\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.aws.amazon.com/AmazonS3/latest/user-guide/create-bucket.html"}),"Refer to the official documentation"),".\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://github.com/backstage/backstage/blob/master/contrib/terraform/techdocs-s3-storage/terraform.tf"}),"Terraform example"),"."),(0,a.kt)("p",null,"TechDocs will publish documentation to this bucket and will fetch files from\nhere to serve documentation in Backstage. Note that the bucket names are\nglobally unique."),(0,a.kt)("p",null,"Set the config ",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs.publisher.awsS3.bucketName")," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"app-config.yaml"),"\nto the name of the bucket you just created."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'awsS3'\n    awsS3:\n      bucketName: 'name-of-techdocs-storage-bucket'\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3. Create minimal AWS IAM policies to manage TechDocs")),(0,a.kt)("p",null,"To ",(0,a.kt)("em",{parentName:"p"},"write")," TechDocs into the S3 bucket the IAM policy needs to have at a minimum\npermissions to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"s3:ListBucket")," to retrieve bucket metadata"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"s3:PutObject")," to upload files to the bucket"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"s3:DeleteObject")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"s3:DeleteObjectVersion")," to delete stale content during\nre-publishing")),(0,a.kt)("p",null,"To ",(0,a.kt)("em",{parentName:"p"},"read")," TechDocs from the S3 bucket the IAM policy needs to have at a minimum\npermissions to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"s3:ListBucket")," - To retrieve bucket metadata"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"s3:GetObject")," - To retrieve files from the bucket")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: If you need to migrate documentation objects from an older-style path\nformat including case-sensitive entity metadata, you will need to add some\nadditional permissions to be able to perform the migration, including:"),(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"s3:PutBucketAcl")," (for copying files,\n",(0,a.kt)("a",o({parentName:"li"},{href:"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html"}),"more info here"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"s3:DeleteObject")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"s3:DeleteObjectVersion")," (for deleting migrated files,\n",(0,a.kt)("a",o({parentName:"li"},{href:"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html"}),"more info here"),")")),(0,a.kt)("p",{parentName:"blockquote"},"...And you will need to ensure the permissions apply to the bucket itself, as\nwell as all resources under the bucket. See the example policy below.")),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-json"}),'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Sid": "TechDocsWithMigration",\n      "Effect": "Allow",\n      "Action": [\n        "s3:PutObject",\n        "s3:GetObject",\n        "s3:DeleteObjectVersion",\n        "s3:ListBucket",\n        "s3:DeleteObject",\n        "s3:PutObjectAcl"\n      ],\n      "Resource": ["arn:aws:s3:::your-bucket", "arn:aws:s3:::your-bucket/*"]\n    }\n  ]\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"4a. (Recommended) Setup authentication the AWS way, using environment\nvariables")),(0,a.kt)("p",null,"You should follow the\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html"}),"AWS security best practices guide for authentication"),"."),(0,a.kt)("p",null,"TechDocs needs access to read files and metadata of the S3 bucket. So if you are\ncreating a policy for a user you want to make sure it is granted access to\nListBucket, GetObject and PutObject."),(0,a.kt)("p",null,"If the environment variables"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AWS_ACCESS_KEY_ID")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AWS_SECRET_ACCESS_KEY")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AWS_REGION"))),(0,a.kt)("p",null,"are set and can be used to access the bucket you created in step 2, they will be\nused by the AWS SDK V3 Node.js client for authentication.\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/loading-node-credentials-environment.html"}),"Refer to the official documentation for loading credentials in Node.js from environment variables"),"."),(0,a.kt)("p",null,"If the environment variables are missing, the AWS SDK tries to read the\n",(0,a.kt)("inlineCode",{parentName:"p"},"~/.aws/credentials")," file for credentials.\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/loading-node-credentials-shared.html"}),"Refer to the official documentation.")),(0,a.kt)("p",null,"If you are deploying Backstage to Amazon EC2, Amazon ECS, or Amazon EKS, you do\nnot need to obtain the access keys separately. They can be made available in the\nenvironment automatically by defining appropriate IAM role with access to the\nbucket. Read more in the\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html#use-roles"}),"official AWS documentation for using IAM roles"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"4b. Authentication using app-config.yaml")),(0,a.kt)("p",null,"AWS credentials and region can be provided to the AWS SDK via ",(0,a.kt)("inlineCode",{parentName:"p"},"app-config.yaml"),".\nIf the configs below are present, they will be used over existing ",(0,a.kt)("inlineCode",{parentName:"p"},"AWS_*"),"\nenvironment variables and the ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.aws/credentials")," config file."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'awsS3'\n    awsS3:\n      bucketName: 'name-of-techdocs-storage-bucket'\n      accountId: '123456789012'\n      region: ${AWS_REGION}\naws:\n  accounts:\n    - accountId: '123456789012'\n      accessKeyId: ${AWS_ACCESS_KEY_ID}\n      secretAccessKey: ${AWS_SECRET_ACCESS_KEY}\n")),(0,a.kt)("p",null,"Refer to the\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/setting-credentials-node.html"}),"official AWS documentation for obtaining the credentials"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"4c. Authentication using an assumed role")," Users with multiple AWS accounts\nmay want to use a role for S3 storage that is in a different AWS account. Using\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"roleArn")," parameter as seen below, you can instruct the TechDocs publisher\nto assume a role before accessing S3."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'awsS3'\n    awsS3:\n      bucketName: 'name-of-techdocs-storage-bucket'\n      region: ${AWS_REGION}\n      credentials:\n        roleArn: arn:aws:iam::123456789012:role/my-backstage-role\n")),(0,a.kt)("p",null,"Note: Assuming a role requires that primary credentials are already configured\nat ",(0,a.kt)("inlineCode",{parentName:"p"},"AWS.config.credentials"),". Read more about\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html"}),"assuming roles in AWS"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"5. That's it!")),(0,a.kt)("p",null,"Your Backstage app is now ready to use AWS S3 for TechDocs, to store and read\nthe static generated documentation files. When you start the backend of the app,\nyou should be able to see\n",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs info Successfully connected to the AWS S3 bucket")," in the logs."),(0,a.kt)("h2",o({},{id:"configuring-azure-blob-storage-container-with-techdocs"}),"Configuring Azure Blob Storage Container with TechDocs"),(0,a.kt)("p",null,"Follow the\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.microsoft.com/en-us/azure/storage/common/storage-auth?toc=/azure/storage/blobs/toc.json"}),"official Azure Blob Storage documentation"),"\nfor the latest instructions on the following steps involving Azure Blob Storage."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1. Set ",(0,a.kt)("inlineCode",{parentName:"strong"},"techdocs.publisher.type")," config in your ",(0,a.kt)("inlineCode",{parentName:"strong"},"app-config.yaml"))),(0,a.kt)("p",null,"Set ",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs.publisher.type")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"'azureBlobStorage'"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'azureBlobStorage'\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2. Create an Azure Blob Storage Container")),(0,a.kt)("p",null,"Create a dedicated container for TechDocs sites.\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-portal"}),"Refer to the official documentation"),"."),(0,a.kt)("p",null,"TechDocs will publish documentation to this container and will fetch files from\nhere to serve documentation in Backstage. Note that the container names are\nglobally unique."),(0,a.kt)("p",null,"Set the config ",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs.publisher.azureBlobStorage.containerName")," in your\n",(0,a.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," to the name of the container you just created."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'azureBlobStorage'\n    azureBlobStorage:\n      containerName: 'name-of-techdocs-storage-container'\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3a. (Recommended) Authentication using environment variable")),(0,a.kt)("p",null,"If you do not prefer (3a) and optionally like to use a service account, you can\nset the config ",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs.publisher.azureBlobStorage.credentials.accountName")," in\nyour ",(0,a.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," to the your account name."),(0,a.kt)("p",null,"The storage blob client will automatically use the environment variable\n",(0,a.kt)("inlineCode",{parentName:"p"},"AZURE_TENANT_ID"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"AZURE_CLIENT_ID"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"AZURE_CLIENT_SECRET")," to authenticate with\nAzure Blob Storage.\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-create-service-principal-portal"}),"Steps to create the service where the variables can be retrieved from"),"."),(0,a.kt)("p",null,(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad"}),"https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad")," for more\ndetails."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'azureBlobStorage'\n    azureBlobStorage:\n      containerName: 'name-of-techdocs-storage-bucket'\n      credentials:\n        accountName: ${TECHDOCS_AZURE_BLOB_STORAGE_ACCOUNT_NAME}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3b. Authentication using app-config.yaml")),(0,a.kt)("p",null,"If you do not prefer (3a) and optionally like to use a service account, you can\nfollow these steps."),(0,a.kt)("p",null,'To get credentials, access the Azure Portal and go to "Settings > Access Keys",\nand get your Storage account name and Primary Key.\n',(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key"}),"https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key"),"\nfor more details."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'azureBlobStorage'\n    azureBlobStorage:\n      containerName: 'name-of-techdocs-storage-bucket'\n      credentials:\n        accountName: ${TECHDOCS_AZURE_BLOB_STORAGE_ACCOUNT_NAME}\n        accountKey: ${TECHDOCS_AZURE_BLOB_STORAGE_ACCOUNT_KEY}\n")),(0,a.kt)("p",null,"In either case, the account or credentials used to access your container and all\nTechDocs objects underneath it should have the ",(0,a.kt)("inlineCode",{parentName:"p"},"Storage Blog Data Owner")," role\napplied, in order to read, write, and delete objects as needed."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"4. That's it!")),(0,a.kt)("p",null,"Your Backstage app is now ready to use Azure Blob Storage for TechDocs, to store\nand read the static generated documentation files. When you start the backend of\nthe app, you should be able to see\n",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs info Successfully connected to the Azure Blob Storage container")," in\nthe logs."),(0,a.kt)("h2",o({},{id:"configuring-openstack-swift-container-with-techdocs"}),"Configuring OpenStack Swift Container with TechDocs"),(0,a.kt)("p",null,"Follow the\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.openstack.org/api-ref/identity/v3/"}),"official OpenStack Api documentation"),"\nfor the latest instructions on the following steps involving OpenStack Storage."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1. Set ",(0,a.kt)("inlineCode",{parentName:"strong"},"techdocs.publisher.type")," config in your ",(0,a.kt)("inlineCode",{parentName:"strong"},"app-config.yaml"))),(0,a.kt)("p",null,"Set ",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs.publisher.type")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"'openStackSwift'"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'openStackSwift'\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2. Create an OpenStack Swift Storage Container")),(0,a.kt)("p",null,"Create a dedicated container for TechDocs sites.\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.openstack.org/mitaka/user-guide/dashboard_manage_containers.html"}),"Refer to the official documentation"),"."),(0,a.kt)("p",null,"TechDocs will publish documentation to this container and will fetch files from\nhere to serve documentation in Backstage. Note that the container names are\nglobally unique."),(0,a.kt)("p",null,"Set the config ",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs.publisher.openStackSwift.containerName")," in your\n",(0,a.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," to the name of the container you just created."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'openStackSwift'\n    openStackSwift:\n      containerName: 'name-of-techdocs-storage-container'\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3. Authentication using app-config.yaml")),(0,a.kt)("p",null,"Set the configs in your ",(0,a.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," to point to your container name."),(0,a.kt)("p",null,(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.openstack.org/api-ref/identity/v3/?expanded=password-authentication-with-unscoped-authorization-detail,authenticating-with-an-application-credential-detail#authenticating-with-an-application-credential"}),"https://docs.openstack.org/api-ref/identity/v3/?expanded=password-authentication-with-unscoped-authorization-detail,authenticating-with-an-application-credential-detail#authenticating-with-an-application-credential"),"\nfor more details."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'openStackSwift'\n    openStackSwift:\n      containerName: 'name-of-techdocs-storage-bucket'\n      credentials:\n        id: ${OPENSTACK_SWIFT_STORAGE_APPLICATION_CREDENTIALS_ID}\n        secret: ${OPENSTACK_SWIFT_STORAGE_APPLICATION_CREDENTIALS_SECRET}\n      authUrl: ${OPENSTACK_SWIFT_STORAGE_AUTH_URL}\n      swiftUrl: ${OPENSTACK_SWIFT_STORAGE_SWIFT_URL}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"4. That's it!")),(0,a.kt)("p",null,"Your Backstage app is now ready to use OpenStack Swift Storage for TechDocs, to\nstore and read the static generated documentation files. When you start the\nbackend of the app, you should be able to see\n",(0,a.kt)("inlineCode",{parentName:"p"},"techdocs info Successfully connected to the OpenStack Swift Storage container"),"\nin the logs."),(0,a.kt)("h2",o({},{id:"bonus-migration-from-old-openstack-swift-configuration"}),"Bonus: Migration from old OpenStack Swift Configuration"),(0,a.kt)("p",null,"Let's assume we have the old OpenStack Swift configuration here."),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'openStackSwift'\n    openStackSwift:\n      containerName: 'name-of-techdocs-storage-bucket'\n      credentials:\n        username: ${OPENSTACK_SWIFT_STORAGE_USERNAME}\n        password: ${OPENSTACK_SWIFT_STORAGE_PASSWORD}\n      authUrl: ${OPENSTACK_SWIFT_STORAGE_AUTH_URL}\n      keystoneAuthVersion: ${OPENSTACK_SWIFT_STORAGE_AUTH_VERSION}\n      domainId: ${OPENSTACK_SWIFT_STORAGE_DOMAIN_ID}\n      domainName: ${OPENSTACK_SWIFT_STORAGE_DOMAIN_NAME}\n      region: ${OPENSTACK_SWIFT_STORAGE_REGION}\n")),(0,a.kt)("h5",o({},{id:"step-1-change-the-credential-keys"}),"Step 1: Change the credential keys"),(0,a.kt)("p",null,"Since the new SDK uses ",(0,a.kt)("em",{parentName:"p"},"Application Credentials")," to authenticate OpenStack, we\nneed to change the keys ",(0,a.kt)("inlineCode",{parentName:"p"},"credentials.username")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"credentials.id"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"credentials.password")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"credentials.secret")," and use Application Credential ID\nand secret here. For more detail about credentials look\n",(0,a.kt)("a",o({parentName:"p"},{href:"https://docs.openstack.org/api-ref/identity/v3/?expanded=password-authentication-with-unscoped-authorization-detail,authenticating-with-an-application-credential-detail#authenticating-with-an-application-credential"}),"here"),"."),(0,a.kt)("h5",o({},{id:"step-2-remove-the-unused-keys"}),"Step 2: Remove the unused keys"),(0,a.kt)("p",null,"Since the new SDK doesn't use the old way authentication, we don't need the keys\n",(0,a.kt)("inlineCode",{parentName:"p"},"openStackSwift.keystoneAuthVersion"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"openStackSwift.domainId"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"openStackSwift.domainName")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"openStackSwift.region"),". So you can remove them."),(0,a.kt)("h5",o({},{id:"step-3-add-swift-url"}),"Step 3: Add Swift URL"),(0,a.kt)("p",null,"The new SDK needs the OpenStack Swift connection URL for connecting the Swift.\nSo you need to add a new key called ",(0,a.kt)("inlineCode",{parentName:"p"},"openStackSwift.swiftUrl")," and give the\nOpenStack Swift URL here. Example URL should look like that:\n",(0,a.kt)("inlineCode",{parentName:"p"},"https://example.com:6780/swift/v1")),(0,a.kt)("h5",o({},{id:"thats-it"}),"That's it!"),(0,a.kt)("p",null,"Your new configuration should look like that!"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-yaml"}),"techdocs:\n  publisher:\n    type: 'openStackSwift'\n    openStackSwift:\n      containerName: 'name-of-techdocs-storage-bucket'\n      credentials:\n        id: ${OPENSTACK_SWIFT_STORAGE_APPLICATION_CREDENTIALS_ID}\n        secret: ${OPENSTACK_SWIFT_STORAGE_APPLICATION_CREDENTIALS_SECRET}\n      authUrl: ${OPENSTACK_SWIFT_STORAGE_AUTH_URL}\n      swiftUrl: ${OPENSTACK_SWIFT_STORAGE_SWIFT_URL}\n")))}d.isMDXComponent=!0},862525:e=>{var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(e){a[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(o){return!1}}()?Object.assign:function(e,r){for(var i,c,s=o(e),l=1;l<arguments.length;l++){for(var u in i=Object(arguments[l]))n.call(i,u)&&(s[u]=i[u]);if(t){c=t(i);for(var p=0;p<c.length;p++)a.call(i,c[p])&&(s[c[p]]=i[c[p]])}}return s}},541535:(e,t,n)=>{var a=n(862525),o=60103,r=60106;var i=60109,c=60110,s=60112;var l=60115,u=60116;if("function"==typeof Symbol&&Symbol.for){var p=Symbol.for;o=p("react.element"),r=p("react.portal"),p("react.fragment"),p("react.strict_mode"),p("react.profiler"),i=p("react.provider"),c=p("react.context"),s=p("react.forward_ref"),p("react.suspense"),l=p("react.memo"),u=p("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function h(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f={};function g(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||m}function k(){}function y(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||m}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(h(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=g.prototype;var b=y.prototype=new k;b.constructor=y,a(b,g.prototype),b.isPureReactComponent=!0;var S={current:null},N=Object.prototype.hasOwnProperty,w={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,n){var a,r={},i=null,c=null;if(null!=t)for(a in void 0!==t.ref&&(c=t.ref),void 0!==t.key&&(i=""+t.key),t)N.call(t,a)&&!w.hasOwnProperty(a)&&(r[a]=t[a]);var s=arguments.length-2;if(1===s)r.children=n;else if(1<s){for(var l=Array(s),u=0;u<s;u++)l[u]=arguments[u+2];r.children=l}if(e&&e.defaultProps)for(a in s=e.defaultProps)void 0===r[a]&&(r[a]=s[a]);return{$$typeof:o,type:e,key:i,ref:c,props:r,_owner:S.current}}function v(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var A=/\/+/g;function O(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function T(e,t,n,a,i){var c=typeof e;"undefined"!==c&&"boolean"!==c||(e=null);var s=!1;if(null===e)s=!0;else switch(c){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case o:case r:s=!0}}if(s)return i=i(s=e),e=""===a?"."+O(s,0):a,Array.isArray(i)?(n="",null!=e&&(n=e.replace(A,"$&/")+"/"),T(i,t,n,"",(function(e){return e}))):null!=i&&(v(i)&&(i=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(A,"$&/")+"/")+e)),t.push(i)),1;if(s=0,a=""===a?".":a+":",Array.isArray(e))for(var l=0;l<e.length;l++){var u=a+O(c=e[l],l);s+=T(c,t,n,u,i)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),l=0;!(c=e.next()).done;)s+=T(c=c.value,t,n,u=a+O(c,l++),i);else if("object"===c)throw t=""+e,Error(h(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return s}function _(e,t,n){if(null==e)return e;var a=[],o=0;return T(e,a,"","",(function(e){return t.call(n,e,o++)})),a}function E(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var I={current:null};function j(){var e=I.current;if(null===e)throw Error(h(321));return e}},827378:(e,t,n)=>{n(541535)}}]);